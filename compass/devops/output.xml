<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.0.4 (Python 3.7.2 on darwin)" generated="20190220 17:55:54.172">
<suite id="s1" name="Devops" source="/root/mygithub/quality/automation/rf/compass/devops">
<suite id="s1-s1" name="测试用例" source="/root/mygithub/quality/automation/rf/compass/devops/测试用例">
<suite id="s1-s1-s1" name="API" source="/root/mygithub/quality/automation/rf/compass/devops/测试用例/API">
<suite id="s1-s1-s1-s1" name="devopsAPI" source="/root/mygithub/quality/automation/rf/compass/devops/测试用例/API/devopsAPI.txt">
<test id="s1-s1-s1-s1-t1" name="devops_持续交付_gitlab_golang流水线">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>环境初始化</arg>
</arguments>
<msg timestamp="20190220 17:55:54.982" level="INFO">环境初始化</msg>
<status status="PASS" starttime="20190220 17:55:54.980" endtime="20190220 17:55:54.982"></status>
</kw>
<kw name="devops_判断是否已存在workspace" library="devopsAPI业务关键词">
<arguments>
<arg>${workspaceName_gitlab}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${0}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20190220 17:55:54.986" level="INFO">${result} = 0</msg>
<status status="PASS" starttime="20190220 17:55:54.985" endtime="20190220 17:55:54.986"></status>
</kw>
<kw name="devops_获取workspace" library="devopsAPI业务关键词">
<assign>
<var>${content}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=Basic YWRtaW46UHdkMTIzNDU2</arg>
<arg>X-Tenant=${namespace}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20190220 17:55:54.990" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'Basic YWRtaW46UHdkMTIzNDU2', 'X-Tenant': 'devops'}</msg>
<status status="PASS" starttime="20190220 17:55:54.988" endtime="20190220 17:55:54.990"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>compass</arg>
<arg>http://${compass_ip}:${api_port}/apis/admin.devops.caicloud.io</arg>
<arg>${header}</arg>
</arguments>
<msg timestamp="20190220 17:55:54.992" level="INFO">Creating Session using : alias=compass, url=http://192.168.129.130:6002/apis/admin.devops.caicloud.io, headers={'Content-Type': 'application/json', 'Authorization': 'Basic YWRtaW46UHdkMTIzNDU2', 'X-Tenant': 'devops'},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20190220 17:55:54.991" endtime="20190220 17:55:54.993"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the</doc>
<arguments>
<arg>compass</arg>
<arg>${url}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190220 17:55:55.310" level="INFO">Get Request using : alias=compass, uri=/v1/workspaces, headers={'Content-Type': 'application/json', 'Authorization': 'Basic YWRtaW46UHdkMTIzNDU2', 'X-Tenant': 'devops'} json=None</msg>
<msg timestamp="20190220 17:55:55.310" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190220 17:55:54.994" endtime="20190220 17:55:55.310"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20190220 17:55:55.312" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20190220 17:55:55.311" endtime="20190220 17:55:55.313"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<assign>
<var>${content}</var>
</assign>
<msg timestamp="20190220 17:55:55.315" level="INFO">${content} = {'metadata': {'total': 0}, 'items': []}</msg>
<status status="PASS" starttime="20190220 17:55:55.313" endtime="20190220 17:55:55.315"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${content}</arg>
</arguments>
<msg timestamp="20190220 17:55:55.316" level="INFO">{'metadata': {'total': 0}, 'items': []}</msg>
<status status="PASS" starttime="20190220 17:55:55.316" endtime="20190220 17:55:55.317"></status>
</kw>
<msg timestamp="20190220 17:55:55.317" level="INFO">${content} = {'metadata': {'total': 0}, 'items': []}</msg>
<status status="PASS" starttime="20190220 17:55:54.987" endtime="20190220 17:55:55.317"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${content['metadata']['total']}</arg>
</arguments>
<assign>
<var>${number}</var>
</assign>
<msg timestamp="20190220 17:55:55.319" level="INFO">${number} = 0</msg>
<status status="PASS" starttime="20190220 17:55:55.318" endtime="20190220 17:55:55.319"></status>
</kw>
<kw name="${i} IN RANGE [ ${number} ]" type="for">
<status status="PASS" starttime="20190220 17:55:55.320" endtime="20190220 17:55:55.320"></status>
</kw>
<msg timestamp="20190220 17:55:55.321" level="INFO">${result} = 0</msg>
<status status="PASS" starttime="20190220 17:55:54.983" endtime="20190220 17:55:55.321"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${result}==${1}</arg>
<arg>devops_删除workspace</arg>
<arg>gitlab</arg>
<arg>${workspaceName_gitlab}</arg>
</arguments>
<status status="PASS" starttime="20190220 17:55:55.322" endtime="20190220 17:55:55.323"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>devops_创建workspace</arg>
</arguments>
<msg timestamp="20190220 17:55:55.325" level="INFO">devops_创建workspace</msg>
<status status="PASS" starttime="20190220 17:55:55.324" endtime="20190220 17:55:55.325"></status>
</kw>
<kw name="devops_创建workspace" library="devopsAPI业务关键词">
<arguments>
<arg>gitlab</arg>
</arguments>
<kw name="github流水线获取token" library="devopsAPI基础关键词">
<assign>
<var>${githubjson_token}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>base64.b64decode('${github_token}')</arg>
<arg>modules=base64</arg>
</arguments>
<assign>
<var>${kk}</var>
</assign>
<msg timestamp="20190220 17:55:55.328" level="INFO">${kk} = 7607cc6672d77fca99014ef987d0ab0e4564b40b</msg>
<status status="PASS" starttime="20190220 17:55:55.327" endtime="20190220 17:55:55.329"></status>
</kw>
<kw name="Decode Bytes To String" library="String">
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<arguments>
<arg>${kk}</arg>
<arg>UTF-8</arg>
</arguments>
<assign>
<var>${kkstr}</var>
</assign>
<msg timestamp="20190220 17:55:55.330" level="INFO">${kkstr} = 7607cc6672d77fca99014ef987d0ab0e4564b40b</msg>
<status status="PASS" starttime="20190220 17:55:55.329" endtime="20190220 17:55:55.330"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${kk}</arg>
</arguments>
<msg timestamp="20190220 17:55:55.332" level="INFO">7607cc6672d77fca99014ef987d0ab0e4564b40b</msg>
<status status="PASS" starttime="20190220 17:55:55.331" endtime="20190220 17:55:55.332"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${workspaceJSON_github}</arg>
</arguments>
<assign>
<var>${github_decode_token}</var>
</assign>
<msg timestamp="20190220 17:55:55.334" level="INFO">${github_decode_token} = {'scm': {'type': 'Github', 'authType': 'Token', 'username': ' ', 'server': 'https://github.com', 'token': 'NzYwN2NjNjY3MmQ3N2ZjYTk5MDE0ZWY5ODdkMGFiMGU0NTY0YjQwYg=='}, 'cargo': {'projectType': 'default...</msg>
<status status="PASS" starttime="20190220 17:55:55.333" endtime="20190220 17:55:55.334"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${github_decode_token['scm']}</arg>
<arg>token=${kkstr}</arg>
</arguments>
<status status="PASS" starttime="20190220 17:55:55.334" endtime="20190220 17:55:55.335"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${github_decode_token['scm']['token']}</arg>
</arguments>
<msg timestamp="20190220 17:55:55.336" level="INFO">7607cc6672d77fca99014ef987d0ab0e4564b40b</msg>
<status status="PASS" starttime="20190220 17:55:55.335" endtime="20190220 17:55:55.336"></status>
</kw>
<msg timestamp="20190220 17:55:55.337" level="INFO">${githubjson_token} = {'scm': {'type': 'Github', 'authType': 'Token', 'username': ' ', 'server': 'https://github.com', 'token': '7607cc6672d77fca99014ef987d0ab0e4564b40b'}, 'cargo': {'projectType': 'default', 'name': 'defa...</msg>
<status status="PASS" starttime="20190220 17:55:55.327" endtime="20190220 17:55:55.337"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${repo_type}'=='gitlab'</arg>
<arg>Set Variable</arg>
<arg>${workspaceJson_gitlab}</arg>
<arg>ELSE IF</arg>
<arg>'${repo_type}'=='github'</arg>
<arg>Set Variable</arg>
<arg>${githubjson_token}</arg>
<arg>ELSE IF</arg>
<arg>'${repo_type}'=='svn'</arg>
<arg>Set Variable</arg>
<arg>${workspaceJSON_svn}</arg>
</arguments>
<assign>
<var>${workspaceJson}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${workspaceJson_gitlab}</arg>
</arguments>
<status status="PASS" starttime="20190220 17:55:55.339" endtime="20190220 17:55:55.339"></status>
</kw>
<msg timestamp="20190220 17:55:55.339" level="INFO">${workspaceJson} = {"scm":{"type":"Gitlab","authType":"Password","username":"peter","server":"http://192.168.130.29:81","password":"1wonderful"},"cargo":{"projectType":"default","name":"default"},"workerQuota":{"cpuRequ...</msg>
<status status="PASS" starttime="20190220 17:55:55.338" endtime="20190220 17:55:55.340"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${workspaceJson}</arg>
</arguments>
<msg timestamp="20190220 17:55:55.341" level="INFO">{"scm":{"type":"Gitlab","authType":"Password","username":"peter","server":"http://192.168.130.29:81","password":"1wonderful"},"cargo":{"projectType":"default","name":"default"},"workerQuota":{"cpuRequests":"0.5","cpuLimits":"1","memoryRequests":"1Gi","memoryLimits":"2Gi"},"alias":"autoabcgitlab"}</msg>
<status status="PASS" starttime="20190220 17:55:55.340" endtime="20190220 17:55:55.341"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=Basic YWRtaW46UHdkMTIzNDU2</arg>
<arg>X-Tenant=${namespace}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20190220 17:55:55.343" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'Basic YWRtaW46UHdkMTIzNDU2', 'X-Tenant': 'devops'}</msg>
<status status="PASS" starttime="20190220 17:55:55.341" endtime="20190220 17:55:55.343"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>compass</arg>
<arg>http://${compass_ip}:${api_port}/apis/admin.devops.caicloud.io</arg>
<arg>${header}</arg>
</arguments>
<msg timestamp="20190220 17:55:55.344" level="INFO">Creating Session using : alias=compass, url=http://192.168.129.130:6002/apis/admin.devops.caicloud.io, headers={'Content-Type': 'application/json', 'Authorization': 'Basic YWRtaW46UHdkMTIzNDU2', 'X-Tenant': 'devops'},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20190220 17:55:55.343" endtime="20190220 17:55:55.344"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the</doc>
<arguments>
<arg>compass</arg>
<arg>/v1/workspaces</arg>
<arg>data=${workspaceJson}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190220 17:55:56.277" level="INFO">Post Request using : alias=compass, uri=/v1/workspaces, data={"scm":{"type":"Gitlab","authType":"Password","username":"peter","server":"http://192.168.130.29:81","password":"1wonderful"},"cargo":{"projectType":"default","name":"default"},"workerQuota":{"cpuRequests":"0.5","cpuLimits":"1","memoryRequests":"1Gi","memoryLimits":"2Gi"},"alias":"autoabcgitlab"}, headers={'Content-Type': 'application/json', 'Authorization': 'Basic YWRtaW46UHdkMTIzNDU2', 'X-Tenant': 'devops'}, files=None, allow_redirects=True </msg>
<msg timestamp="20190220 17:55:56.278" level="INFO">${resp} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20190220 17:55:55.345" endtime="20190220 17:55:56.278"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20190220 17:55:56.286" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20190220 17:55:56.279" endtime="20190220 17:55:56.287"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<assign>
<var>${content}</var>
</assign>
<msg timestamp="20190220 17:55:56.289" level="INFO">${content} = {'name': 'autoabcgitlab', 'alias': 'autoabcgitlab', 'description': '', 'owner': 'admin', 'scm': {'type': 'Gitlab', 'authType': 'Password', 'server': 'http://192.168.130.29:81', 'username': 'peter', 't...</msg>
<status status="PASS" starttime="20190220 17:55:56.288" endtime="20190220 17:55:56.290"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${content}</arg>
</arguments>
<msg timestamp="20190220 17:55:56.291" level="INFO">{'name': 'autoabcgitlab', 'alias': 'autoabcgitlab', 'description': '', 'owner': 'admin', 'scm': {'type': 'Gitlab', 'authType': 'Password', 'server': 'http://192.168.130.29:81', 'username': 'peter', 'token': 'OsFFis+QD4W2ZKY/iLsBKuoXhtfv08VhxGmotMxLGcPT8C5odxU+mKMfioxwn9EuBev06yUPC5LyFUBIS/HSMPXgwcBxUJ6g3jFsIRB8nbs='}, 'pipelineCount': 0, 'cargo': {'name': 'default', 'project': 'devops_autoabcgitlab', 'host': 'test.caicloudprivatetest.com'}, 'cacheDependencies': None, 'workerQuota': {}, 'creationTime': '2019-02-20T17:55:46+08:00', 'lastUpdateTime': '2019-02-20T17:55:46+08:00'}</msg>
<status status="PASS" starttime="20190220 17:55:56.291" endtime="20190220 17:55:56.292"></status>
</kw>
<status status="PASS" starttime="20190220 17:55:55.325" endtime="20190220 17:55:56.292"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>devops_获取workspace</arg>
</arguments>
<msg timestamp="20190220 17:55:56.293" level="INFO">devops_获取workspace</msg>
<status status="PASS" starttime="20190220 17:55:56.292" endtime="20190220 17:55:56.293"></status>
</kw>
<kw name="devops_获取workspace" library="devopsAPI业务关键词">
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=Basic YWRtaW46UHdkMTIzNDU2</arg>
<arg>X-Tenant=${namespace}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20190220 17:55:56.296" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'Basic YWRtaW46UHdkMTIzNDU2', 'X-Tenant': 'devops'}</msg>
<status status="PASS" starttime="20190220 17:55:56.295" endtime="20190220 17:55:56.296"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>compass</arg>
<arg>http://${compass_ip}:${api_port}/apis/admin.devops.caicloud.io</arg>
<arg>${header}</arg>
</arguments>
<msg timestamp="20190220 17:55:56.297" level="INFO">Creating Session using : alias=compass, url=http://192.168.129.130:6002/apis/admin.devops.caicloud.io, headers={'Content-Type': 'application/json', 'Authorization': 'Basic YWRtaW46UHdkMTIzNDU2', 'X-Tenant': 'devops'},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20190220 17:55:56.296" endtime="20190220 17:55:56.297"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the</doc>
<arguments>
<arg>compass</arg>
<arg>${url}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190220 17:55:56.564" level="INFO">Get Request using : alias=compass, uri=/v1/workspaces, headers={'Content-Type': 'application/json', 'Authorization': 'Basic YWRtaW46UHdkMTIzNDU2', 'X-Tenant': 'devops'} json=None</msg>
<msg timestamp="20190220 17:55:56.564" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190220 17:55:56.298" endtime="20190220 17:55:56.564"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20190220 17:55:56.566" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20190220 17:55:56.565" endtime="20190220 17:55:56.566"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<assign>
<var>${content}</var>
</assign>
<msg timestamp="20190220 17:55:56.568" level="INFO">${content} = {'metadata': {'total': 1}, 'items': [{'name': 'autoabcgitlab', 'alias': 'autoabcgitlab', 'description': '', 'owner': 'admin', 'scm': {'type': 'Gitlab', 'authType': 'Password', 'server': 'http://192.16...</msg>
<status status="PASS" starttime="20190220 17:55:56.567" endtime="20190220 17:55:56.568"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${content}</arg>
</arguments>
<msg timestamp="20190220 17:55:56.569" level="INFO">{'metadata': {'total': 1}, 'items': [{'name': 'autoabcgitlab', 'alias': 'autoabcgitlab', 'description': '', 'owner': 'admin', 'scm': {'type': 'Gitlab', 'authType': 'Password', 'server': 'http://192.168.130.29:81', 'username': 'peter', 'token': 'ccf05205b7f8e37a0e89d2f20fc48e36e24aff5e2dc2f58933cfca92c4191236'}, 'pipelineCount': 0, 'cargo': {'name': 'default', 'project': 'devops_autoabcgitlab', 'host': 'test.caicloudprivatetest.com'}, 'cacheDependencies': {}, 'workerQuota': {}, 'creationTime': '2019-02-20T17:55:46+08:00', 'lastUpdateTime': '2019-02-20T17:55:46+08:00'}]}</msg>
<status status="PASS" starttime="20190220 17:55:56.569" endtime="20190220 17:55:56.569"></status>
</kw>
<status status="PASS" starttime="20190220 17:55:56.294" endtime="20190220 17:55:56.570"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>devops_创建pipeline</arg>
</arguments>
<msg timestamp="20190220 17:55:56.570" level="INFO">devops_创建pipeline</msg>
<status status="PASS" starttime="20190220 17:55:56.570" endtime="20190220 17:55:56.571"></status>
</kw>
<kw name="devops_创建pipeline" library="devopsAPI业务关键词">
<arguments>
<arg>gitlab</arg>
<arg>golang</arg>
<arg>${workspaceName_gitlab}</arg>
<arg>${pipelineName_github}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=Basic YWRtaW46UHdkMTIzNDU2</arg>
<arg>X-Tenant=${namespace}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20190220 17:55:56.572" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'Basic YWRtaW46UHdkMTIzNDU2', 'X-Tenant': 'devops'}</msg>
<status status="PASS" starttime="20190220 17:55:56.572" endtime="20190220 17:55:56.573"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>compass</arg>
<arg>http://${compass_ip}:${api_port}/apis/admin.devops.caicloud.io</arg>
<arg>${header}</arg>
</arguments>
<msg timestamp="20190220 17:55:56.573" level="INFO">Creating Session using : alias=compass, url=http://192.168.129.130:6002/apis/admin.devops.caicloud.io, headers={'Content-Type': 'application/json', 'Authorization': 'Basic YWRtaW46UHdkMTIzNDU2', 'X-Tenant': 'devops'},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20190220 17:55:56.573" endtime="20190220 17:55:56.574"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the</doc>
<arguments>
<arg>compass</arg>
<arg>v1/workspaces/${workspace}/pipelines</arg>
<arg>data=${pipelineJSON_${repo_type}_${codeSource}}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190220 17:55:57.194" level="INFO">Post Request using : alias=compass, uri=v1/workspaces/autoabcgitlab/pipelines, data={"name":"autoabcgitlab","alias":"autoabcgitlab","description":"","build":{"buildInfo":{"buildTool":{},"cacheDependency":false},"builderImage":{"image":"test.caicloudprivatetest.com/library/golang:1.9.5-alpine3.7"},"stages":{"codeCheckout":{"mainRepo":{"type":"Gitlab","gitlab":{"ref":"refs/heads/master","url":"http://192.168.130.29:81/peter/golangtest.git"}}},"package":{"command":["cd helloworld\nCGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build"]},"imageBuild":{"buildInfos":[{"contextDir":".","dockerfile":"","dockerfilePath":"Dockerfile","taskName":"imageBuild-be1rt","mark":"imageBuild-be1rt","imageName":"abcd"}]},"imageRelease":{"releasePolicies":[{"imageName":"abcd","type":"Always"}]}}}}, headers={'Content-Type': 'application/json', 'Authorization': 'Basic YWRtaW46UHdkMTIzNDU2', 'X-Tenant': 'devops'}, files=None, allow_redirects=True </msg>
<msg timestamp="20190220 17:55:57.195" level="INFO">${resp} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20190220 17:55:56.574" endtime="20190220 17:55:57.195"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20190220 17:55:57.196" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20190220 17:55:57.196" endtime="20190220 17:55:57.197"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<assign>
<var>${content}</var>
</assign>
<msg timestamp="20190220 17:55:57.198" level="INFO">${content} = {'id': '5c6d2422bdcb2f00015824a7', 'name': 'autoabcgitlab', 'alias': 'autoabcgitlab', 'owner': 'admin', 'projectID': '5c6d2422bdcb2f00015824a6', 'build': {'buildInfo': {'buildTool': {}}, 'builderImage...</msg>
<status status="PASS" starttime="20190220 17:55:57.197" endtime="20190220 17:55:57.199"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${content}</arg>
</arguments>
<msg timestamp="20190220 17:55:57.200" level="INFO">{'id': '5c6d2422bdcb2f00015824a7', 'name': 'autoabcgitlab', 'alias': 'autoabcgitlab', 'owner': 'admin', 'projectID': '5c6d2422bdcb2f00015824a6', 'build': {'buildInfo': {'buildTool': {}}, 'builderImage': {'image': 'test.caicloudprivatetest.com/library/golang:1.9.5-alpine3.7'}, 'stages': {'codeCheckout': {'mainRepo': {'type': 'Gitlab', 'gitlab': {'url': 'http://192.168.130.29:81/peter/golangtest.git', 'ref': 'refs/heads/master'}}}, 'package': {'command': ['cd helloworld\nCGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build']}, 'imageBuild': {'buildInfos': [{'taskName': 'imageBuild-be1rt', 'contextDir': '.', 'dockerfilePath': 'Dockerfile', 'imageName': 'abcd'}]}, 'imageRelease': {'releasePolicies': [{'imageName': 'abcd', 'type': 'Always'}]}}}, 'creationTime': '2019-02-20T17:55:46.828802801+08:00', 'lastUpdateTime': '2019-02-20T17:55:46.828802981+08:00', 'annotations': {'tenant': 'devops'}}</msg>
<status status="PASS" starttime="20190220 17:55:57.199" endtime="20190220 17:55:57.200"></status>
</kw>
<status status="PASS" starttime="20190220 17:55:56.571" endtime="20190220 17:55:57.201"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>devops_获取pipeline</arg>
</arguments>
<msg timestamp="20190220 17:55:57.202" level="INFO">devops_获取pipeline</msg>
<status status="PASS" starttime="20190220 17:55:57.201" endtime="20190220 17:55:57.202"></status>
</kw>
<kw name="devops_获取pipeline" library="devopsAPI业务关键词">
<arguments>
<arg>gitlab</arg>
<arg>golang</arg>
<arg>${workspaceName_gitlab}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=Basic YWRtaW46UHdkMTIzNDU2</arg>
<arg>X-Tenant=${namespace}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20190220 17:55:57.205" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'Basic YWRtaW46UHdkMTIzNDU2', 'X-Tenant': 'devops'}</msg>
<status status="PASS" starttime="20190220 17:55:57.204" endtime="20190220 17:55:57.205"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>compass</arg>
<arg>http://${compass_ip}:${api_port}/apis/admin.devops.caicloud.io</arg>
<arg>${header}</arg>
</arguments>
<msg timestamp="20190220 17:55:57.206" level="INFO">Creating Session using : alias=compass, url=http://192.168.129.130:6002/apis/admin.devops.caicloud.io, headers={'Content-Type': 'application/json', 'Authorization': 'Basic YWRtaW46UHdkMTIzNDU2', 'X-Tenant': 'devops'},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20190220 17:55:57.205" endtime="20190220 17:55:57.207"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the</doc>
<arguments>
<arg>compass</arg>
<arg>v1/workspaces/${workspace}/pipelines</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190220 17:55:57.516" level="INFO">Get Request using : alias=compass, uri=v1/workspaces/autoabcgitlab/pipelines, headers={'Content-Type': 'application/json', 'Authorization': 'Basic YWRtaW46UHdkMTIzNDU2', 'X-Tenant': 'devops'} json=None</msg>
<msg timestamp="20190220 17:55:57.517" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190220 17:55:57.207" endtime="20190220 17:55:57.517"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20190220 17:55:57.519" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20190220 17:55:57.518" endtime="20190220 17:55:57.519"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<assign>
<var>${content}</var>
</assign>
<msg timestamp="20190220 17:55:57.520" level="INFO">${content} = {'metadata': {'total': 1}, 'items': [{'id': '5c6d2422bdcb2f00015824a7', 'name': 'autoabcgitlab', 'alias': 'autoabcgitlab', 'owner': 'admin', 'projectID': '5c6d2422bdcb2f00015824a6', 'build': {'buildIn...</msg>
<status status="PASS" starttime="20190220 17:55:57.520" endtime="20190220 17:55:57.521"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${content}</arg>
</arguments>
<msg timestamp="20190220 17:55:57.521" level="INFO">{'metadata': {'total': 1}, 'items': [{'id': '5c6d2422bdcb2f00015824a7', 'name': 'autoabcgitlab', 'alias': 'autoabcgitlab', 'owner': 'admin', 'projectID': '5c6d2422bdcb2f00015824a6', 'build': {'buildInfo': {'buildTool': {}}, 'builderImage': {'image': 'test.caicloudprivatetest.com/library/golang:1.9.5-alpine3.7'}, 'stages': {'codeCheckout': {'mainRepo': {'type': 'Gitlab', 'gitlab': {'url': 'http://192.168.130.29:81/peter/golangtest.git', 'ref': 'refs/heads/master'}}}, 'package': {'command': ['cd helloworld\nCGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build']}, 'imageBuild': {'buildInfos': [{'taskName': 'imageBuild-be1rt', 'contextDir': '.', 'dockerfilePath': 'Dockerfile', 'imageName': 'abcd'}]}, 'imageRelease': {'releasePolicies': [{'imageName': 'abcd', 'type': 'Always'}]}}}, 'creationTime': '2019-02-20T17:55:46.828+08:00', 'lastUpdateTime': '2019-02-20T17:55:46.828+08:00', 'annotations': {'tenant': 'devops'}}]}</msg>
<status status="PASS" starttime="20190220 17:55:57.521" endtime="20190220 17:55:57.522"></status>
</kw>
<status status="PASS" starttime="20190220 17:55:57.203" endtime="20190220 17:55:57.522"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>devops_执行pipeline</arg>
</arguments>
<msg timestamp="20190220 17:55:57.523" level="INFO">devops_执行pipeline</msg>
<status status="PASS" starttime="20190220 17:55:57.523" endtime="20190220 17:55:57.524"></status>
</kw>
<kw name="devops_执行pipeline" library="devopsAPI业务关键词">
<arguments>
<arg>gitlab</arg>
<arg>${workspaceName_gitlab}</arg>
<arg>${pipelineName_gitlab}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=Basic YWRtaW46UHdkMTIzNDU2</arg>
<arg>X-Tenant=${namespace}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20190220 17:55:57.526" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'Basic YWRtaW46UHdkMTIzNDU2', 'X-Tenant': 'devops'}</msg>
<status status="PASS" starttime="20190220 17:55:57.525" endtime="20190220 17:55:57.526"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>compass</arg>
<arg>http://${compass_ip}:${api_port}/apis/admin.devops.caicloud.io</arg>
<arg>${header}</arg>
</arguments>
<msg timestamp="20190220 17:55:57.527" level="INFO">Creating Session using : alias=compass, url=http://192.168.129.130:6002/apis/admin.devops.caicloud.io, headers={'Content-Type': 'application/json', 'Authorization': 'Basic YWRtaW46UHdkMTIzNDU2', 'X-Tenant': 'devops'},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20190220 17:55:57.527" endtime="20190220 17:55:57.528"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the</doc>
<arguments>
<arg>compass</arg>
<arg>v1/workspaces/${workspace}/pipelines/${pipeline}/records</arg>
<arg>data=${recordJSON_${repo_type}}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190220 17:55:57.948" level="INFO">Post Request using : alias=compass, uri=v1/workspaces/autoabcgitlab/pipelines/autoabcgitlab/records, data={"stages":["codeCheckout","package","imageBuild","imageRelease"],"workspace":"autoabcgitlab","pipeline":"autoabcgitlab","codeRef":{"type":"refs/heads/","name":"master"},"ref":"refs/heads/master","repoName":"caicaihe/golang","repoType":"github","tagType":"default","cacheDependency":false}, headers={'Content-Type': 'application/json', 'Authorization': 'Basic YWRtaW46UHdkMTIzNDU2', 'X-Tenant': 'devops'}, files=None, allow_redirects=True </msg>
<msg timestamp="20190220 17:55:57.949" level="INFO">${resp} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20190220 17:55:57.529" endtime="20190220 17:55:57.949"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20190220 17:55:57.951" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20190220 17:55:57.950" endtime="20190220 17:55:57.952"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<assign>
<var>${content}</var>
</assign>
<msg timestamp="20190220 17:55:57.954" level="INFO">${content} = {'id': '5c6d2423bdcb2f00015824a8', 'pipelineID': '5c6d2422bdcb2f00015824a7', 'trigger': 'admin', 'performParams': {'ref': 'refs/heads/master', 'stages': ['codeCheckout', 'package', 'imageBuild', 'imag...</msg>
<status status="PASS" starttime="20190220 17:55:57.952" endtime="20190220 17:55:57.954"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${content}</arg>
</arguments>
<msg timestamp="20190220 17:55:57.955" level="INFO">{'id': '5c6d2423bdcb2f00015824a8', 'pipelineID': '5c6d2422bdcb2f00015824a7', 'trigger': 'admin', 'performParams': {'ref': 'refs/heads/master', 'stages': ['codeCheckout', 'package', 'imageBuild', 'imageRelease']}, 'status': 'Pending', 'startTime': '2019-02-20T17:55:47.684469915+08:00', 'endTime': '0001-01-01T00:00:00Z'}</msg>
<status status="PASS" starttime="20190220 17:55:57.955" endtime="20190220 17:55:57.956"></status>
</kw>
<status status="PASS" starttime="20190220 17:55:57.524" endtime="20190220 17:55:57.957"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>等待devops_pipeline执行结果</arg>
</arguments>
<msg timestamp="20190220 17:55:57.958" level="INFO">等待devops_pipeline执行结果</msg>
<status status="PASS" starttime="20190220 17:55:57.958" endtime="20190220 17:55:57.959"></status>
</kw>
<kw name="devops_pipeline执行结果_流水线执行完毕" library="devopsAPI业务关键词">
<arguments>
<arg>gitlab</arg>
<arg>${workspaceName_gitlab}</arg>
<arg>${pipelineName_gitlab}</arg>
</arguments>
<assign>
<var>${return}</var>
</assign>
<kw name="${i} IN RANGE [ 100 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>60</arg>
</arguments>
<msg timestamp="20190220 17:56:57.962" level="INFO">Slept 1 minute</msg>
<status status="PASS" starttime="20190220 17:55:57.961" endtime="20190220 17:56:57.963"></status>
</kw>
<kw name="devops_pipeline执行结果" library="devopsAPI业务关键词">
<arguments>
<arg>${repo_type}</arg>
<arg>${workspace}</arg>
<arg>${pipeline}</arg>
</arguments>
<assign>
<var>${return}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=Basic YWRtaW46UHdkMTIzNDU2</arg>
<arg>X-Tenant=${namespace}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20190220 17:56:57.968" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'Basic YWRtaW46UHdkMTIzNDU2', 'X-Tenant': 'devops'}</msg>
<status status="PASS" starttime="20190220 17:56:57.967" endtime="20190220 17:56:57.968"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>compass</arg>
<arg>http://${compass_ip}:${api_port}/apis/admin.devops.caicloud.io</arg>
<arg>${header}</arg>
</arguments>
<msg timestamp="20190220 17:56:57.970" level="INFO">Creating Session using : alias=compass, url=http://192.168.129.130:6002/apis/admin.devops.caicloud.io, headers={'Content-Type': 'application/json', 'Authorization': 'Basic YWRtaW46UHdkMTIzNDU2', 'X-Tenant': 'devops'},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20190220 17:56:57.969" endtime="20190220 17:56:57.970"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the</doc>
<arguments>
<arg>compass</arg>
<arg>v1/workspaces/${workspace}/pipelines/${pipeline}/records</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190220 17:56:58.428" level="INFO">Get Request using : alias=compass, uri=v1/workspaces/autoabcgitlab/pipelines/autoabcgitlab/records, headers={'Content-Type': 'application/json', 'Authorization': 'Basic YWRtaW46UHdkMTIzNDU2', 'X-Tenant': 'devops'} json=None</msg>
<msg timestamp="20190220 17:56:58.429" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190220 17:56:57.971" endtime="20190220 17:56:58.430"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20190220 17:56:58.433" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20190220 17:56:58.432" endtime="20190220 17:56:58.433"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<assign>
<var>${content}</var>
</assign>
<msg timestamp="20190220 17:56:58.435" level="INFO">${content} = {'metadata': {'total': 1}, 'items': [{'id': '5c6d2423bdcb2f00015824a8', 'name': 'b9c5b9c-190220175609', 'pipelineID': '5c6d2422bdcb2f00015824a7', 'trigger': 'admin', 'performParams': {'ref': 'refs/hea...</msg>
<status status="PASS" starttime="20190220 17:56:58.434" endtime="20190220 17:56:58.435"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${content['items'][0]['status']}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20190220 17:56:58.437" level="INFO">${result} = Running</msg>
<status status="PASS" starttime="20190220 17:56:58.436" endtime="20190220 17:56:58.438"></status>
</kw>
<msg timestamp="20190220 17:56:58.439" level="INFO">${return} = Running</msg>
<status status="PASS" starttime="20190220 17:56:57.964" endtime="20190220 17:56:58.439"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${return}'=='Success'</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20190220 17:56:58.440" endtime="20190220 17:56:58.441"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${return}'=='Failed'</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20190220 17:56:58.441" endtime="20190220 17:56:58.443"></status>
</kw>
<status status="PASS" starttime="20190220 17:55:57.960" endtime="20190220 17:56:58.444"></status>
</kw>
<kw name="${i} = 1" type="foritem">
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>60</arg>
</arguments>
<msg timestamp="20190220 17:57:58.447" level="INFO">Slept 1 minute</msg>
<status status="PASS" starttime="20190220 17:56:58.445" endtime="20190220 17:57:58.448"></status>
</kw>
<kw name="devops_pipeline执行结果" library="devopsAPI业务关键词">
<arguments>
<arg>${repo_type}</arg>
<arg>${workspace}</arg>
<arg>${pipeline}</arg>
</arguments>
<assign>
<var>${return}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=Basic YWRtaW46UHdkMTIzNDU2</arg>
<arg>X-Tenant=${namespace}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20190220 17:57:58.453" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'Basic YWRtaW46UHdkMTIzNDU2', 'X-Tenant': 'devops'}</msg>
<status status="PASS" starttime="20190220 17:57:58.452" endtime="20190220 17:57:58.453"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>compass</arg>
<arg>http://${compass_ip}:${api_port}/apis/admin.devops.caicloud.io</arg>
<arg>${header}</arg>
</arguments>
<msg timestamp="20190220 17:57:58.454" level="INFO">Creating Session using : alias=compass, url=http://192.168.129.130:6002/apis/admin.devops.caicloud.io, headers={'Content-Type': 'application/json', 'Authorization': 'Basic YWRtaW46UHdkMTIzNDU2', 'X-Tenant': 'devops'},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20190220 17:57:58.454" endtime="20190220 17:57:58.455"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the</doc>
<arguments>
<arg>compass</arg>
<arg>v1/workspaces/${workspace}/pipelines/${pipeline}/records</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190220 17:57:58.738" level="INFO">Get Request using : alias=compass, uri=v1/workspaces/autoabcgitlab/pipelines/autoabcgitlab/records, headers={'Content-Type': 'application/json', 'Authorization': 'Basic YWRtaW46UHdkMTIzNDU2', 'X-Tenant': 'devops'} json=None</msg>
<msg timestamp="20190220 17:57:58.738" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190220 17:57:58.456" endtime="20190220 17:57:58.739"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20190220 17:57:58.740" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20190220 17:57:58.739" endtime="20190220 17:57:58.740"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<assign>
<var>${content}</var>
</assign>
<msg timestamp="20190220 17:57:58.742" level="INFO">${content} = {'metadata': {'total': 1}, 'items': [{'id': '5c6d2423bdcb2f00015824a8', 'name': 'b9c5b9c-190220175609', 'pipelineID': '5c6d2422bdcb2f00015824a7', 'trigger': 'admin', 'performParams': {'ref': 'refs/hea...</msg>
<status status="PASS" starttime="20190220 17:57:58.740" endtime="20190220 17:57:58.742"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${content['items'][0]['status']}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20190220 17:57:58.743" level="INFO">${result} = Success</msg>
<status status="PASS" starttime="20190220 17:57:58.742" endtime="20190220 17:57:58.743"></status>
</kw>
<msg timestamp="20190220 17:57:58.744" level="INFO">${return} = Success</msg>
<status status="PASS" starttime="20190220 17:57:58.449" endtime="20190220 17:57:58.744"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${return}'=='Success'</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20190220 17:57:58.745" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20190220 17:57:58.745" endtime="20190220 17:57:58.746"></status>
</kw>
<status status="PASS" starttime="20190220 17:57:58.744" endtime="20190220 17:57:58.746"></status>
</kw>
<status status="PASS" starttime="20190220 17:56:58.444" endtime="20190220 17:57:58.746"></status>
</kw>
<status status="PASS" starttime="20190220 17:55:57.960" endtime="20190220 17:57:58.747"></status>
</kw>
<msg timestamp="20190220 17:57:58.747" level="INFO">${return} = Success</msg>
<status status="PASS" starttime="20190220 17:55:57.959" endtime="20190220 17:57:58.747"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>断言执行结果为success</arg>
</arguments>
<msg timestamp="20190220 17:57:58.748" level="INFO">断言执行结果为success</msg>
<status status="PASS" starttime="20190220 17:57:58.748" endtime="20190220 17:57:58.749"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Be Equal As Strings</arg>
<arg>'${return}'</arg>
<arg>'Success'</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>'${return}'</arg>
<arg>'Success'</arg>
</arguments>
<status status="PASS" starttime="20190220 17:57:58.751" endtime="20190220 17:57:58.752"></status>
</kw>
<status status="PASS" starttime="20190220 17:57:58.750" endtime="20190220 17:57:58.753"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>devops_获取pipeline执行记录</arg>
</arguments>
<msg timestamp="20190220 17:57:58.754" level="INFO">devops_获取pipeline执行记录</msg>
<status status="PASS" starttime="20190220 17:57:58.753" endtime="20190220 17:57:58.755"></status>
</kw>
<kw name="devops_获取pipeline执行记录" library="devopsAPI业务关键词">
<arguments>
<arg>gitlab</arg>
<arg>${workspaceName_gitlab}</arg>
<arg>${pipelineName_gitlab}</arg>
</arguments>
<assign>
<var>${pipeline_id}</var>
<var>${task_name}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=Basic YWRtaW46UHdkMTIzNDU2</arg>
<arg>X-Tenant=${namespace}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20190220 17:57:58.758" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'Basic YWRtaW46UHdkMTIzNDU2', 'X-Tenant': 'devops'}</msg>
<status status="PASS" starttime="20190220 17:57:58.757" endtime="20190220 17:57:58.759"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>compass</arg>
<arg>http://${compass_ip}:${api_port}/apis/admin.devops.caicloud.io</arg>
<arg>${header}</arg>
</arguments>
<msg timestamp="20190220 17:57:58.761" level="INFO">Creating Session using : alias=compass, url=http://192.168.129.130:6002/apis/admin.devops.caicloud.io, headers={'Content-Type': 'application/json', 'Authorization': 'Basic YWRtaW46UHdkMTIzNDU2', 'X-Tenant': 'devops'},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20190220 17:57:58.760" endtime="20190220 17:57:58.762"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the</doc>
<arguments>
<arg>compass</arg>
<arg>v1/workspaces/${workspace}/pipelines/${pipeline}/records</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190220 17:57:59.068" level="INFO">Get Request using : alias=compass, uri=v1/workspaces/autoabcgitlab/pipelines/autoabcgitlab/records, headers={'Content-Type': 'application/json', 'Authorization': 'Basic YWRtaW46UHdkMTIzNDU2', 'X-Tenant': 'devops'} json=None</msg>
<msg timestamp="20190220 17:57:59.069" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190220 17:57:58.762" endtime="20190220 17:57:59.069"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20190220 17:57:59.070" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20190220 17:57:59.070" endtime="20190220 17:57:59.071"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<assign>
<var>${content}</var>
</assign>
<msg timestamp="20190220 17:57:59.072" level="INFO">${content} = {'metadata': {'total': 1}, 'items': [{'id': '5c6d2423bdcb2f00015824a8', 'name': 'b9c5b9c-190220175609', 'pipelineID': '5c6d2422bdcb2f00015824a7', 'trigger': 'admin', 'performParams': {'ref': 'refs/hea...</msg>
<status status="PASS" starttime="20190220 17:57:59.071" endtime="20190220 17:57:59.072"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${content['items'][0]['id']}</arg>
</arguments>
<assign>
<var>${pipeline_id}</var>
</assign>
<msg timestamp="20190220 17:57:59.074" level="INFO">${pipeline_id} = 5c6d2423bdcb2f00015824a8</msg>
<status status="PASS" starttime="20190220 17:57:59.073" endtime="20190220 17:57:59.074"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${content['items'][0]['stageStatus']['imageBuild']['tasks'][0]['name']}</arg>
</arguments>
<assign>
<var>${task_name}</var>
</assign>
<msg timestamp="20190220 17:57:59.075" level="INFO">${task_name} = imageBuild-be1rt</msg>
<status status="PASS" starttime="20190220 17:57:59.074" endtime="20190220 17:57:59.076"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${pipeline_id}</arg>
</arguments>
<msg timestamp="20190220 17:57:59.076" level="INFO">5c6d2423bdcb2f00015824a8</msg>
<status status="PASS" starttime="20190220 17:57:59.076" endtime="20190220 17:57:59.077"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${task_name}</arg>
</arguments>
<msg timestamp="20190220 17:57:59.077" level="INFO">imageBuild-be1rt</msg>
<status status="PASS" starttime="20190220 17:57:59.077" endtime="20190220 17:57:59.078"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${content}</arg>
</arguments>
<msg timestamp="20190220 17:57:59.079" level="INFO">{'metadata': {'total': 1}, 'items': [{'id': '5c6d2423bdcb2f00015824a8', 'name': 'b9c5b9c-190220175609', 'pipelineID': '5c6d2422bdcb2f00015824a7', 'trigger': 'admin', 'performParams': {'ref': 'refs/heads/master', 'stages': ['codeCheckout', 'package', 'imageBuild', 'imageRelease']}, 'stageStatus': {'codeCheckout': {'status': 'Success', 'startTime': '2019-02-20T17:56:17.646+08:00', 'endTime': '2019-02-20T17:56:18.327+08:00', 'commits': {'mainRepo': {'repoName': 'peter/golangtest', 'id': 'b9c5b9c6c23e436a3ef6f1dd3e7b6e507975aea0', 'author': 'peter', 'date': '2019-01-22T17:10:19+08:00', 'message': 'new'}}}, 'package': {'status': 'Success', 'startTime': '2019-02-20T17:56:18.332+08:00', 'endTime': '2019-02-20T17:56:34.308+08:00'}, 'imageBuild': {'status': 'Success', 'startTime': '2019-02-20T17:56:34.314+08:00', 'endTime': '2019-02-20T17:57:03.333+08:00', 'tasks': [{'name': 'imageBuild-be1rt', 'status': 'Success', 'startTime': '2019-02-20T17:56:34.314+08:00', 'endTime': '2019-02-20T17:57:03.333+08:00', 'image': 'test.caicloudprivatetest.com/devops_autoabcgitlab/abcd:b9c5b9c-190220175609'}]}, 'imageRelease': {'status': 'Success', 'startTime': '2019-02-20T17:57:03.342+08:00', 'endTime': '2019-02-20T17:57:19.161+08:00', 'tasks': [{'name': 'test.caicloudprivatetest.com/devops_autoabcgitlab/abcd:b9c5b9c-190220175609', 'status': 'Success', 'startTime': '2019-02-20T17:57:03.342+08:00', 'endTime': '2019-02-20T17:57:19.161+08:00', 'image': 'test.caicloudprivatetest.com/devops_autoabcgitlab/abcd:b9c5b9c-190220175609'}]}}, 'status': 'Success', 'startTime': '2019-02-20T17:56:09.066+08:00', 'endTime': '2019-02-20T17:57:19.168+08:00'}]}</msg>
<status status="PASS" starttime="20190220 17:57:59.078" endtime="20190220 17:57:59.079"></status>
</kw>
<msg timestamp="20190220 17:57:59.080" level="INFO">${pipeline_id} = 5c6d2423bdcb2f00015824a8</msg>
<msg timestamp="20190220 17:57:59.080" level="INFO">${task_name} = imageBuild-be1rt</msg>
<status status="PASS" starttime="20190220 17:57:58.755" endtime="20190220 17:57:59.080"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>devops_获取pipeline执行log</arg>
</arguments>
<msg timestamp="20190220 17:57:59.082" level="INFO">devops_获取pipeline执行log</msg>
<status status="PASS" starttime="20190220 17:57:59.081" endtime="20190220 17:57:59.082"></status>
</kw>
<kw name="devops_获取pipeline执行log" library="devopsAPI业务关键词">
<arguments>
<arg>${pipeline_id}</arg>
<arg>${task_name}</arg>
<arg>imageBuild</arg>
<arg>gitlab</arg>
<arg>${workspaceName_gitlab}</arg>
<arg>${pipelineName_gitlab}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=Basic YWRtaW46UHdkMTIzNDU2</arg>
<arg>X-Tenant=${namespace}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20190220 17:57:59.086" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'Basic YWRtaW46UHdkMTIzNDU2', 'X-Tenant': 'devops'}</msg>
<status status="PASS" starttime="20190220 17:57:59.086" endtime="20190220 17:57:59.087"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>compass</arg>
<arg>http://${compass_ip}:${api_port}/apis/admin.devops.caicloud.io</arg>
<arg>${header}</arg>
</arguments>
<msg timestamp="20190220 17:57:59.087" level="INFO">Creating Session using : alias=compass, url=http://192.168.129.130:6002/apis/admin.devops.caicloud.io, headers={'Content-Type': 'application/json', 'Authorization': 'Basic YWRtaW46UHdkMTIzNDU2', 'X-Tenant': 'devops'},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20190220 17:57:59.087" endtime="20190220 17:57:59.088"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the</doc>
<arguments>
<arg>compass</arg>
<arg>v1/workspaces/${workspace}/pipelines/${pipeline}/records/${pipeline_id}/logs?stage=${stage}&amp;task=${task_name}&amp;download=false</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190220 17:57:59.454" level="INFO">Get Request using : alias=compass, uri=v1/workspaces/autoabcgitlab/pipelines/autoabcgitlab/records/5c6d2423bdcb2f00015824a8/logs?stage=imageBuild&amp;task=imageBuild-be1rt&amp;download=false, headers={'Content-Type': 'application/json', 'Authorization': 'Basic YWRtaW46UHdkMTIzNDU2', 'X-Tenant': 'devops'} json=None</msg>
<msg timestamp="20190220 17:57:59.456" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190220 17:57:59.088" endtime="20190220 17:57:59.456"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20190220 17:57:59.459" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20190220 17:57:59.457" endtime="20190220 17:57:59.459"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<msg timestamp="20190220 17:57:59.460" level="INFO">&lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190220 17:57:59.460" endtime="20190220 17:57:59.460"></status>
</kw>
<status status="PASS" starttime="20190220 17:57:59.083" endtime="20190220 17:57:59.461"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>删除流水线组</arg>
</arguments>
<msg timestamp="20190220 17:57:59.461" level="INFO">删除流水线组</msg>
<status status="PASS" starttime="20190220 17:57:59.461" endtime="20190220 17:57:59.462"></status>
</kw>
<kw name="devops_删除workspace" library="devopsAPI业务关键词">
<arguments>
<arg>gitlab</arg>
<arg>${workspaceName_gitlab}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=Basic YWRtaW46UHdkMTIzNDU2</arg>
<arg>X-Tenant=${namespace}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20190220 17:57:59.463" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'Basic YWRtaW46UHdkMTIzNDU2', 'X-Tenant': 'devops'}</msg>
<status status="PASS" starttime="20190220 17:57:59.463" endtime="20190220 17:57:59.464"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>compass</arg>
<arg>http://${compass_ip}:${api_port}/apis/admin.devops.caicloud.io</arg>
<arg>${header}</arg>
</arguments>
<msg timestamp="20190220 17:57:59.464" level="INFO">Creating Session using : alias=compass, url=http://192.168.129.130:6002/apis/admin.devops.caicloud.io, headers={'Content-Type': 'application/json', 'Authorization': 'Basic YWRtaW46UHdkMTIzNDU2', 'X-Tenant': 'devops'},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20190220 17:57:59.464" endtime="20190220 17:57:59.465"></status>
</kw>
<kw name="Delete Request" library="RequestsLibrary">
<doc>Send a DELETE request on the session object found using the</doc>
<arguments>
<arg>compass</arg>
<arg>/v1/workspaces/${workspace}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190220 17:57:59.926" level="INFO">Delete Request using : alias=compass, uri=/v1/workspaces/autoabcgitlab, data=[],                     headers={'Content-Type': 'application/json', 'Authorization': 'Basic YWRtaW46UHdkMTIzNDU2', 'X-Tenant': 'devops'}, allow_redirects=True </msg>
<msg timestamp="20190220 17:57:59.926" level="INFO">${resp} = &lt;Response [204]&gt;</msg>
<status status="PASS" starttime="20190220 17:57:59.465" endtime="20190220 17:57:59.927"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>204</arg>
</arguments>
<msg timestamp="20190220 17:57:59.929" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20190220 17:57:59.928" endtime="20190220 17:57:59.930"></status>
</kw>
<status status="PASS" starttime="20190220 17:57:59.462" endtime="20190220 17:57:59.930"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>devops_删除project</arg>
</arguments>
<msg timestamp="20190220 17:57:59.932" level="INFO">devops_删除project</msg>
<status status="PASS" starttime="20190220 17:57:59.931" endtime="20190220 17:57:59.933"></status>
</kw>
<kw name="devops_删除project" library="devopsAPI业务关键词">
<arguments>
<arg>${workspaceName_gitlab}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=Basic YWRtaW46UHdkMTIzNDU2</arg>
<arg>X-Tenant=${namespace}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20190220 17:57:59.938" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'Basic YWRtaW46UHdkMTIzNDU2', 'X-Tenant': 'devops'}</msg>
<status status="PASS" starttime="20190220 17:57:59.937" endtime="20190220 17:57:59.938"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>compass</arg>
<arg>http://${compass_ip}:${api_port}/apis/admin.cargo.caicloud.io</arg>
<arg>${header}</arg>
</arguments>
<msg timestamp="20190220 17:57:59.940" level="INFO">Creating Session using : alias=compass, url=http://192.168.129.130:6002/apis/admin.cargo.caicloud.io, headers={'Content-Type': 'application/json', 'Authorization': 'Basic YWRtaW46UHdkMTIzNDU2', 'X-Tenant': 'devops'},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20190220 17:57:59.939" endtime="20190220 17:57:59.941"></status>
</kw>
<kw name="Delete Request" library="RequestsLibrary">
<doc>Send a DELETE request on the session object found using the</doc>
<arguments>
<arg>compass</arg>
<arg>${url}/${registryName}/projects/${namespace}_${projectName_l}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190220 17:58:00.406" level="INFO">Delete Request using : alias=compass, uri=/v2/registries/default/projects/devops_autoabcgitlab, data=[],                     headers={'Content-Type': 'application/json', 'Authorization': 'Basic YWRtaW46UHdkMTIzNDU2', 'X-Tenant': 'devops'}, allow_redirects=True </msg>
<msg timestamp="20190220 17:58:00.406" level="INFO">${resp} = &lt;Response [204]&gt;</msg>
<status status="PASS" starttime="20190220 17:57:59.942" endtime="20190220 17:58:00.407"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>204</arg>
</arguments>
<msg timestamp="20190220 17:58:00.408" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20190220 17:58:00.407" endtime="20190220 17:58:00.408"></status>
</kw>
<status status="PASS" starttime="20190220 17:57:59.934" endtime="20190220 17:58:00.409"></status>
</kw>
<status status="PASS" starttime="20190220 17:55:54.977" endtime="20190220 17:58:00.410" critical="yes"></status>
</test>
<test id="s1-s1-s1-s1-t2" name="devops_持续交付_github_maven流水线_加速">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>环境初始化</arg>
</arguments>
<msg timestamp="20190220 17:58:00.415" level="INFO">环境初始化</msg>
<status status="PASS" starttime="20190220 17:58:00.414" endtime="20190220 17:58:00.415"></status>
</kw>
<kw name="devops_判断是否已存在workspace" library="devopsAPI业务关键词">
<arguments>
<arg>${workspaceName_github}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${0}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20190220 17:58:00.423" level="INFO">${result} = 0</msg>
<status status="PASS" starttime="20190220 17:58:00.422" endtime="20190220 17:58:00.423"></status>
</kw>
<kw name="devops_获取workspace" library="devopsAPI业务关键词">
<assign>
<var>${content}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=Basic YWRtaW46UHdkMTIzNDU2</arg>
<arg>X-Tenant=${namespace}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20190220 17:58:00.426" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'Basic YWRtaW46UHdkMTIzNDU2', 'X-Tenant': 'devops'}</msg>
<status status="PASS" starttime="20190220 17:58:00.425" endtime="20190220 17:58:00.426"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>compass</arg>
<arg>http://${compass_ip}:${api_port}/apis/admin.devops.caicloud.io</arg>
<arg>${header}</arg>
</arguments>
<msg timestamp="20190220 17:58:00.427" level="INFO">Creating Session using : alias=compass, url=http://192.168.129.130:6002/apis/admin.devops.caicloud.io, headers={'Content-Type': 'application/json', 'Authorization': 'Basic YWRtaW46UHdkMTIzNDU2', 'X-Tenant': 'devops'},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20190220 17:58:00.427" endtime="20190220 17:58:00.428"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the</doc>
<arguments>
<arg>compass</arg>
<arg>${url}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190220 17:58:00.815" level="INFO">Get Request using : alias=compass, uri=/v1/workspaces, headers={'Content-Type': 'application/json', 'Authorization': 'Basic YWRtaW46UHdkMTIzNDU2', 'X-Tenant': 'devops'} json=None</msg>
<msg timestamp="20190220 17:58:00.816" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190220 17:58:00.429" endtime="20190220 17:58:00.816"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20190220 17:58:00.819" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20190220 17:58:00.817" endtime="20190220 17:58:00.820"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<assign>
<var>${content}</var>
</assign>
<msg timestamp="20190220 17:58:00.822" level="INFO">${content} = {'metadata': {'total': 0}, 'items': []}</msg>
<status status="PASS" starttime="20190220 17:58:00.821" endtime="20190220 17:58:00.822"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${content}</arg>
</arguments>
<msg timestamp="20190220 17:58:00.824" level="INFO">{'metadata': {'total': 0}, 'items': []}</msg>
<status status="PASS" starttime="20190220 17:58:00.823" endtime="20190220 17:58:00.824"></status>
</kw>
<msg timestamp="20190220 17:58:00.825" level="INFO">${content} = {'metadata': {'total': 0}, 'items': []}</msg>
<status status="PASS" starttime="20190220 17:58:00.424" endtime="20190220 17:58:00.825"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${content['metadata']['total']}</arg>
</arguments>
<assign>
<var>${number}</var>
</assign>
<msg timestamp="20190220 17:58:00.827" level="INFO">${number} = 0</msg>
<status status="PASS" starttime="20190220 17:58:00.826" endtime="20190220 17:58:00.827"></status>
</kw>
<kw name="${i} IN RANGE [ ${number} ]" type="for">
<status status="PASS" starttime="20190220 17:58:00.827" endtime="20190220 17:58:00.828"></status>
</kw>
<msg timestamp="20190220 17:58:00.828" level="INFO">${result} = 0</msg>
<status status="PASS" starttime="20190220 17:58:00.420" endtime="20190220 17:58:00.829"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${result}==${1}</arg>
<arg>devops_删除workspace</arg>
<arg>github</arg>
<arg>${workspaceName_github}</arg>
</arguments>
<status status="PASS" starttime="20190220 17:58:00.829" endtime="20190220 17:58:00.830"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>devops_创建workspace</arg>
</arguments>
<msg timestamp="20190220 17:58:00.831" level="INFO">devops_创建workspace</msg>
<status status="PASS" starttime="20190220 17:58:00.831" endtime="20190220 17:58:00.832"></status>
</kw>
<kw name="devops_创建workspace" library="devopsAPI业务关键词">
<arguments>
<arg>github</arg>
<arg>${workspaceName_github}</arg>
</arguments>
<kw name="github流水线获取token" library="devopsAPI基础关键词">
<assign>
<var>${githubjson_token}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>base64.b64decode('${github_token}')</arg>
<arg>modules=base64</arg>
</arguments>
<assign>
<var>${kk}</var>
</assign>
<msg timestamp="20190220 17:58:00.838" level="INFO">${kk} = 7607cc6672d77fca99014ef987d0ab0e4564b40b</msg>
<status status="PASS" starttime="20190220 17:58:00.836" endtime="20190220 17:58:00.838"></status>
</kw>
<kw name="Decode Bytes To String" library="String">
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<arguments>
<arg>${kk}</arg>
<arg>UTF-8</arg>
</arguments>
<assign>
<var>${kkstr}</var>
</assign>
<msg timestamp="20190220 17:58:00.840" level="INFO">${kkstr} = 7607cc6672d77fca99014ef987d0ab0e4564b40b</msg>
<status status="PASS" starttime="20190220 17:58:00.839" endtime="20190220 17:58:00.840"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${kk}</arg>
</arguments>
<msg timestamp="20190220 17:58:00.842" level="INFO">7607cc6672d77fca99014ef987d0ab0e4564b40b</msg>
<status status="PASS" starttime="20190220 17:58:00.841" endtime="20190220 17:58:00.842"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${workspaceJSON_github}</arg>
</arguments>
<assign>
<var>${github_decode_token}</var>
</assign>
<msg timestamp="20190220 17:58:00.844" level="INFO">${github_decode_token} = {'scm': {'type': 'Github', 'authType': 'Token', 'username': ' ', 'server': 'https://github.com', 'token': 'NzYwN2NjNjY3MmQ3N2ZjYTk5MDE0ZWY5ODdkMGFiMGU0NTY0YjQwYg=='}, 'cargo': {'projectType': 'default...</msg>
<status status="PASS" starttime="20190220 17:58:00.843" endtime="20190220 17:58:00.844"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${github_decode_token['scm']}</arg>
<arg>token=${kkstr}</arg>
</arguments>
<status status="PASS" starttime="20190220 17:58:00.845" endtime="20190220 17:58:00.846"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${github_decode_token['scm']['token']}</arg>
</arguments>
<msg timestamp="20190220 17:58:00.848" level="INFO">7607cc6672d77fca99014ef987d0ab0e4564b40b</msg>
<status status="PASS" starttime="20190220 17:58:00.847" endtime="20190220 17:58:00.848"></status>
</kw>
<msg timestamp="20190220 17:58:00.849" level="INFO">${githubjson_token} = {'scm': {'type': 'Github', 'authType': 'Token', 'username': ' ', 'server': 'https://github.com', 'token': '7607cc6672d77fca99014ef987d0ab0e4564b40b'}, 'cargo': {'projectType': 'default', 'name': 'defa...</msg>
<status status="PASS" starttime="20190220 17:58:00.834" endtime="20190220 17:58:00.849"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${repo_type}'=='gitlab'</arg>
<arg>Set Variable</arg>
<arg>${workspaceJson_gitlab}</arg>
<arg>ELSE IF</arg>
<arg>'${repo_type}'=='github'</arg>
<arg>Set Variable</arg>
<arg>${githubjson_token}</arg>
<arg>ELSE IF</arg>
<arg>'${repo_type}'=='svn'</arg>
<arg>Set Variable</arg>
<arg>${workspaceJSON_svn}</arg>
</arguments>
<assign>
<var>${workspaceJson}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${githubjson_token}</arg>
</arguments>
<status status="PASS" starttime="20190220 17:58:00.853" endtime="20190220 17:58:00.854"></status>
</kw>
<msg timestamp="20190220 17:58:00.855" level="INFO">${workspaceJson} = {'scm': {'type': 'Github', 'authType': 'Token', 'username': ' ', 'server': 'https://github.com', 'token': '7607cc6672d77fca99014ef987d0ab0e4564b40b'}, 'cargo': {'projectType': 'default', 'name': 'defa...</msg>
<status status="PASS" starttime="20190220 17:58:00.851" endtime="20190220 17:58:00.855"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${workspaceJson}</arg>
</arguments>
<msg timestamp="20190220 17:58:00.857" level="INFO">{'scm': {'type': 'Github', 'authType': 'Token', 'username': ' ', 'server': 'https://github.com', 'token': '7607cc6672d77fca99014ef987d0ab0e4564b40b'}, 'cargo': {'projectType': 'default', 'name': 'default'}, 'cacheDependencies': {'Maven': True}, 'GithubToken': 'false', 'GithubPassword': 'false', 'GitlabToken': 'false', 'GitlabPassword': 'false', 'workerQuota': {'cpuRequests': '0.5', 'cpuLimits': '1', 'memoryRequests': '1Gi', 'memoryLimits': '2Gi'}, 'alias': 'autoagithub'}</msg>
<status status="PASS" starttime="20190220 17:58:00.856" endtime="20190220 17:58:00.857"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=Basic YWRtaW46UHdkMTIzNDU2</arg>
<arg>X-Tenant=${namespace}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20190220 17:58:00.859" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'Basic YWRtaW46UHdkMTIzNDU2', 'X-Tenant': 'devops'}</msg>
<status status="PASS" starttime="20190220 17:58:00.858" endtime="20190220 17:58:00.860"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>compass</arg>
<arg>http://${compass_ip}:${api_port}/apis/admin.devops.caicloud.io</arg>
<arg>${header}</arg>
</arguments>
<msg timestamp="20190220 17:58:00.861" level="INFO">Creating Session using : alias=compass, url=http://192.168.129.130:6002/apis/admin.devops.caicloud.io, headers={'Content-Type': 'application/json', 'Authorization': 'Basic YWRtaW46UHdkMTIzNDU2', 'X-Tenant': 'devops'},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20190220 17:58:00.860" endtime="20190220 17:58:00.862"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the</doc>
<arguments>
<arg>compass</arg>
<arg>/v1/workspaces</arg>
<arg>data=${workspaceJson}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190220 17:58:01.237" level="INFO">Post Request using : alias=compass, uri=/v1/workspaces, data={"scm": {"type": "Github", "authType": "Token", "username": " ", "server": "https://github.com", "token": "7607cc6672d77fca99014ef987d0ab0e4564b40b"}, "cargo": {"projectType": "default", "name": "default"}, "cacheDependencies": {"Maven": true}, "GithubToken": "false", "GithubPassword": "false", "GitlabToken": "false", "GitlabPassword": "false", "workerQuota": {"cpuRequests": "0.5", "cpuLimits": "1", "memoryRequests": "1Gi", "memoryLimits": "2Gi"}, "alias": "autoagithub"}, headers={'Content-Type': 'application/json', 'Authorization': 'Basic YWRtaW46UHdkMTIzNDU2', 'X-Tenant': 'devops'}, files=None, allow_redirects=True </msg>
<msg timestamp="20190220 17:58:01.237" level="INFO">${resp} = &lt;Response [500]&gt;</msg>
<status status="PASS" starttime="20190220 17:58:00.863" endtime="20190220 17:58:01.237"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20190220 17:58:01.239" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20190220 17:58:01.239" level="FAIL">500 != 201</msg>
<status status="FAIL" starttime="20190220 17:58:01.238" endtime="20190220 17:58:01.240"></status>
</kw>
<status status="FAIL" starttime="20190220 17:58:00.832" endtime="20190220 17:58:01.240"></status>
</kw>
<status status="FAIL" starttime="20190220 17:58:00.411" endtime="20190220 17:58:01.241" critical="yes">500 != 201</status>
</test>
<test id="s1-s1-s1-s1-t3" name="devops_持续交付_svn_golang流水线">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>环境初始化</arg>
</arguments>
<msg timestamp="20190220 17:58:01.244" level="INFO">环境初始化</msg>
<status status="PASS" starttime="20190220 17:58:01.243" endtime="20190220 17:58:01.244"></status>
</kw>
<kw name="devops_判断是否已存在workspace" library="devopsAPI业务关键词">
<arguments>
<arg>${workspaceName_svn}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${0}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20190220 17:58:01.245" level="INFO">${result} = 0</msg>
<status status="PASS" starttime="20190220 17:58:01.245" endtime="20190220 17:58:01.246"></status>
</kw>
<kw name="devops_获取workspace" library="devopsAPI业务关键词">
<assign>
<var>${content}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=Basic YWRtaW46UHdkMTIzNDU2</arg>
<arg>X-Tenant=${namespace}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20190220 17:58:01.248" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'Basic YWRtaW46UHdkMTIzNDU2', 'X-Tenant': 'devops'}</msg>
<status status="PASS" starttime="20190220 17:58:01.247" endtime="20190220 17:58:01.248"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>compass</arg>
<arg>http://${compass_ip}:${api_port}/apis/admin.devops.caicloud.io</arg>
<arg>${header}</arg>
</arguments>
<msg timestamp="20190220 17:58:01.249" level="INFO">Creating Session using : alias=compass, url=http://192.168.129.130:6002/apis/admin.devops.caicloud.io, headers={'Content-Type': 'application/json', 'Authorization': 'Basic YWRtaW46UHdkMTIzNDU2', 'X-Tenant': 'devops'},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20190220 17:58:01.248" endtime="20190220 17:58:01.250"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the</doc>
<arguments>
<arg>compass</arg>
<arg>${url}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190220 17:58:01.558" level="INFO">Get Request using : alias=compass, uri=/v1/workspaces, headers={'Content-Type': 'application/json', 'Authorization': 'Basic YWRtaW46UHdkMTIzNDU2', 'X-Tenant': 'devops'} json=None</msg>
<msg timestamp="20190220 17:58:01.565" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190220 17:58:01.250" endtime="20190220 17:58:01.565"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20190220 17:58:01.566" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20190220 17:58:01.566" endtime="20190220 17:58:01.567"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<assign>
<var>${content}</var>
</assign>
<msg timestamp="20190220 17:58:01.569" level="INFO">${content} = {'metadata': {'total': 0}, 'items': []}</msg>
<status status="PASS" starttime="20190220 17:58:01.568" endtime="20190220 17:58:01.569"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${content}</arg>
</arguments>
<msg timestamp="20190220 17:58:01.570" level="INFO">{'metadata': {'total': 0}, 'items': []}</msg>
<status status="PASS" starttime="20190220 17:58:01.570" endtime="20190220 17:58:01.570"></status>
</kw>
<msg timestamp="20190220 17:58:01.571" level="INFO">${content} = {'metadata': {'total': 0}, 'items': []}</msg>
<status status="PASS" starttime="20190220 17:58:01.246" endtime="20190220 17:58:01.571"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${content['metadata']['total']}</arg>
</arguments>
<assign>
<var>${number}</var>
</assign>
<msg timestamp="20190220 17:58:01.572" level="INFO">${number} = 0</msg>
<status status="PASS" starttime="20190220 17:58:01.571" endtime="20190220 17:58:01.572"></status>
</kw>
<kw name="${i} IN RANGE [ ${number} ]" type="for">
<status status="PASS" starttime="20190220 17:58:01.572" endtime="20190220 17:58:01.572"></status>
</kw>
<msg timestamp="20190220 17:58:01.573" level="INFO">${result} = 0</msg>
<status status="PASS" starttime="20190220 17:58:01.244" endtime="20190220 17:58:01.573"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${result}==${1}</arg>
<arg>devops_删除workspace</arg>
<arg>svm</arg>
<arg>${workspaceName_svn}</arg>
</arguments>
<status status="PASS" starttime="20190220 17:58:01.573" endtime="20190220 17:58:01.574"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>devops_创建workspace</arg>
</arguments>
<msg timestamp="20190220 17:58:01.575" level="INFO">devops_创建workspace</msg>
<status status="PASS" starttime="20190220 17:58:01.574" endtime="20190220 17:58:01.575"></status>
</kw>
<kw name="devops_创建workspace" library="devopsAPI业务关键词">
<arguments>
<arg>svn</arg>
<arg>${workspaceName_svn}</arg>
</arguments>
<kw name="github流水线获取token" library="devopsAPI基础关键词">
<assign>
<var>${githubjson_token}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>base64.b64decode('${github_token}')</arg>
<arg>modules=base64</arg>
</arguments>
<assign>
<var>${kk}</var>
</assign>
<msg timestamp="20190220 17:58:01.581" level="INFO">${kk} = 7607cc6672d77fca99014ef987d0ab0e4564b40b</msg>
<status status="PASS" starttime="20190220 17:58:01.579" endtime="20190220 17:58:01.581"></status>
</kw>
<kw name="Decode Bytes To String" library="String">
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<arguments>
<arg>${kk}</arg>
<arg>UTF-8</arg>
</arguments>
<assign>
<var>${kkstr}</var>
</assign>
<msg timestamp="20190220 17:58:01.582" level="INFO">${kkstr} = 7607cc6672d77fca99014ef987d0ab0e4564b40b</msg>
<status status="PASS" starttime="20190220 17:58:01.581" endtime="20190220 17:58:01.582"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${kk}</arg>
</arguments>
<msg timestamp="20190220 17:58:01.584" level="INFO">7607cc6672d77fca99014ef987d0ab0e4564b40b</msg>
<status status="PASS" starttime="20190220 17:58:01.583" endtime="20190220 17:58:01.584"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${workspaceJSON_github}</arg>
</arguments>
<assign>
<var>${github_decode_token}</var>
</assign>
<msg timestamp="20190220 17:58:01.586" level="INFO">${github_decode_token} = {'scm': {'type': 'Github', 'authType': 'Token', 'username': ' ', 'server': 'https://github.com', 'token': 'NzYwN2NjNjY3MmQ3N2ZjYTk5MDE0ZWY5ODdkMGFiMGU0NTY0YjQwYg=='}, 'cargo': {'projectType': 'default...</msg>
<status status="PASS" starttime="20190220 17:58:01.585" endtime="20190220 17:58:01.587"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${github_decode_token['scm']}</arg>
<arg>token=${kkstr}</arg>
</arguments>
<status status="PASS" starttime="20190220 17:58:01.587" endtime="20190220 17:58:01.588"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${github_decode_token['scm']['token']}</arg>
</arguments>
<msg timestamp="20190220 17:58:01.589" level="INFO">7607cc6672d77fca99014ef987d0ab0e4564b40b</msg>
<status status="PASS" starttime="20190220 17:58:01.589" endtime="20190220 17:58:01.589"></status>
</kw>
<msg timestamp="20190220 17:58:01.590" level="INFO">${githubjson_token} = {'scm': {'type': 'Github', 'authType': 'Token', 'username': ' ', 'server': 'https://github.com', 'token': '7607cc6672d77fca99014ef987d0ab0e4564b40b'}, 'cargo': {'projectType': 'default', 'name': 'defa...</msg>
<status status="PASS" starttime="20190220 17:58:01.578" endtime="20190220 17:58:01.590"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${repo_type}'=='gitlab'</arg>
<arg>Set Variable</arg>
<arg>${workspaceJson_gitlab}</arg>
<arg>ELSE IF</arg>
<arg>'${repo_type}'=='github'</arg>
<arg>Set Variable</arg>
<arg>${githubjson_token}</arg>
<arg>ELSE IF</arg>
<arg>'${repo_type}'=='svn'</arg>
<arg>Set Variable</arg>
<arg>${workspaceJSON_svn}</arg>
</arguments>
<assign>
<var>${workspaceJson}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${workspaceJSON_svn}</arg>
</arguments>
<status status="PASS" starttime="20190220 17:58:01.592" endtime="20190220 17:58:01.593"></status>
</kw>
<msg timestamp="20190220 17:58:01.593" level="INFO">${workspaceJson} = {"scm":{"type":"SVN","authType":"Password","username":"user001","server":"https://192.168.130.29/svn/","password":"123456"},"cargo":{"projectType":"default","name":"default"},"workerQuota":{"cpuReques...</msg>
<status status="PASS" starttime="20190220 17:58:01.591" endtime="20190220 17:58:01.594"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${workspaceJson}</arg>
</arguments>
<msg timestamp="20190220 17:58:01.595" level="INFO">{"scm":{"type":"SVN","authType":"Password","username":"user001","server":"https://192.168.130.29/svn/","password":"123456"},"cargo":{"projectType":"default","name":"default"},"workerQuota":{"cpuRequests":"0.5","cpuLimits":"1","memoryRequests":"1Gi","memoryLimits":"2Gi"},"alias":"autoabcsvn"}</msg>
<status status="PASS" starttime="20190220 17:58:01.594" endtime="20190220 17:58:01.595"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=Basic YWRtaW46UHdkMTIzNDU2</arg>
<arg>X-Tenant=${namespace}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20190220 17:58:01.596" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'Basic YWRtaW46UHdkMTIzNDU2', 'X-Tenant': 'devops'}</msg>
<status status="PASS" starttime="20190220 17:58:01.596" endtime="20190220 17:58:01.597"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>compass</arg>
<arg>http://${compass_ip}:${api_port}/apis/admin.devops.caicloud.io</arg>
<arg>${header}</arg>
</arguments>
<msg timestamp="20190220 17:58:01.598" level="INFO">Creating Session using : alias=compass, url=http://192.168.129.130:6002/apis/admin.devops.caicloud.io, headers={'Content-Type': 'application/json', 'Authorization': 'Basic YWRtaW46UHdkMTIzNDU2', 'X-Tenant': 'devops'},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20190220 17:58:01.597" endtime="20190220 17:58:01.599"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the</doc>
<arguments>
<arg>compass</arg>
<arg>/v1/workspaces</arg>
<arg>data=${workspaceJson}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190220 17:58:01.873" level="INFO">Post Request using : alias=compass, uri=/v1/workspaces, data={"scm":{"type":"SVN","authType":"Password","username":"user001","server":"https://192.168.130.29/svn/","password":"123456"},"cargo":{"projectType":"default","name":"default"},"workerQuota":{"cpuRequests":"0.5","cpuLimits":"1","memoryRequests":"1Gi","memoryLimits":"2Gi"},"alias":"autoabcsvn"}, headers={'Content-Type': 'application/json', 'Authorization': 'Basic YWRtaW46UHdkMTIzNDU2', 'X-Tenant': 'devops'}, files=None, allow_redirects=True </msg>
<msg timestamp="20190220 17:58:01.874" level="INFO">${resp} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20190220 17:58:01.599" endtime="20190220 17:58:01.874"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20190220 17:58:01.876" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20190220 17:58:01.875" endtime="20190220 17:58:01.877"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<assign>
<var>${content}</var>
</assign>
<msg timestamp="20190220 17:58:01.879" level="INFO">${content} = {'name': 'autoabcsvn', 'alias': 'autoabcsvn', 'description': '', 'owner': 'admin', 'scm': {'type': 'SVN', 'authType': 'Password', 'server': 'https://192.168.130.29/svn/', 'username': 'user001', 'token...</msg>
<status status="PASS" starttime="20190220 17:58:01.878" endtime="20190220 17:58:01.879"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${content}</arg>
</arguments>
<msg timestamp="20190220 17:58:01.881" level="INFO">{'name': 'autoabcsvn', 'alias': 'autoabcsvn', 'description': '', 'owner': 'admin', 'scm': {'type': 'SVN', 'authType': 'Password', 'server': 'https://192.168.130.29/svn/', 'username': 'user001', 'token': 'k0sap4wA26XADlCqwH/V19URBJLEXzC/d/3lDEgO'}, 'pipelineCount': 0, 'cargo': {'name': 'default', 'project': 'devops_autoabcsvn', 'host': 'test.caicloudprivatetest.com'}, 'cacheDependencies': None, 'workerQuota': {}, 'creationTime': '2019-02-20T17:57:51+08:00', 'lastUpdateTime': '2019-02-20T17:57:51+08:00'}</msg>
<status status="PASS" starttime="20190220 17:58:01.880" endtime="20190220 17:58:01.881"></status>
</kw>
<status status="PASS" starttime="20190220 17:58:01.576" endtime="20190220 17:58:01.883"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>devops_获取workspace</arg>
</arguments>
<msg timestamp="20190220 17:58:01.886" level="INFO">devops_获取workspace</msg>
<status status="PASS" starttime="20190220 17:58:01.884" endtime="20190220 17:58:01.886"></status>
</kw>
<kw name="devops_获取workspace" library="devopsAPI业务关键词">
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=Basic YWRtaW46UHdkMTIzNDU2</arg>
<arg>X-Tenant=${namespace}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20190220 17:58:01.890" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'Basic YWRtaW46UHdkMTIzNDU2', 'X-Tenant': 'devops'}</msg>
<status status="PASS" starttime="20190220 17:58:01.889" endtime="20190220 17:58:01.890"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>compass</arg>
<arg>http://${compass_ip}:${api_port}/apis/admin.devops.caicloud.io</arg>
<arg>${header}</arg>
</arguments>
<msg timestamp="20190220 17:58:01.892" level="INFO">Creating Session using : alias=compass, url=http://192.168.129.130:6002/apis/admin.devops.caicloud.io, headers={'Content-Type': 'application/json', 'Authorization': 'Basic YWRtaW46UHdkMTIzNDU2', 'X-Tenant': 'devops'},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20190220 17:58:01.891" endtime="20190220 17:58:01.893"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the</doc>
<arguments>
<arg>compass</arg>
<arg>${url}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190220 17:58:02.207" level="INFO">Get Request using : alias=compass, uri=/v1/workspaces, headers={'Content-Type': 'application/json', 'Authorization': 'Basic YWRtaW46UHdkMTIzNDU2', 'X-Tenant': 'devops'} json=None</msg>
<msg timestamp="20190220 17:58:02.208" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190220 17:58:01.894" endtime="20190220 17:58:02.208"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20190220 17:58:02.210" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20190220 17:58:02.209" endtime="20190220 17:58:02.211"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<assign>
<var>${content}</var>
</assign>
<msg timestamp="20190220 17:58:02.213" level="INFO">${content} = {'metadata': {'total': 1}, 'items': [{'name': 'autoabcsvn', 'alias': 'autoabcsvn', 'description': '', 'owner': 'admin', 'scm': {'type': 'SVN', 'authType': 'Password', 'server': 'https://192.168.130.29...</msg>
<status status="PASS" starttime="20190220 17:58:02.211" endtime="20190220 17:58:02.213"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${content}</arg>
</arguments>
<msg timestamp="20190220 17:58:02.215" level="INFO">{'metadata': {'total': 1}, 'items': [{'name': 'autoabcsvn', 'alias': 'autoabcsvn', 'description': '', 'owner': 'admin', 'scm': {'type': 'SVN', 'authType': 'Password', 'server': 'https://192.168.130.29/svn', 'username': 'user001', 'password': '123456', 'token': 'user001:123456'}, 'pipelineCount': 0, 'cargo': {'name': 'default', 'project': 'devops_autoabcsvn', 'host': 'test.caicloudprivatetest.com'}, 'cacheDependencies': {}, 'workerQuota': {}, 'creationTime': '2019-02-20T17:57:51+08:00', 'lastUpdateTime': '2019-02-20T17:57:51+08:00'}]}</msg>
<status status="PASS" starttime="20190220 17:58:02.214" endtime="20190220 17:58:02.216"></status>
</kw>
<status status="PASS" starttime="20190220 17:58:01.887" endtime="20190220 17:58:02.217"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>devops_创建pipeline</arg>
</arguments>
<msg timestamp="20190220 17:58:02.219" level="INFO">devops_创建pipeline</msg>
<status status="PASS" starttime="20190220 17:58:02.218" endtime="20190220 17:58:02.219"></status>
</kw>
<kw name="devops_创建pipeline" library="devopsAPI业务关键词">
<arguments>
<arg>svn</arg>
<arg>golang</arg>
<arg>${workspaceName_svn}</arg>
<arg>${pipelineName_svn}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=Basic YWRtaW46UHdkMTIzNDU2</arg>
<arg>X-Tenant=${namespace}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20190220 17:58:02.223" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'Basic YWRtaW46UHdkMTIzNDU2', 'X-Tenant': 'devops'}</msg>
<status status="PASS" starttime="20190220 17:58:02.221" endtime="20190220 17:58:02.223"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>compass</arg>
<arg>http://${compass_ip}:${api_port}/apis/admin.devops.caicloud.io</arg>
<arg>${header}</arg>
</arguments>
<msg timestamp="20190220 17:58:02.225" level="INFO">Creating Session using : alias=compass, url=http://192.168.129.130:6002/apis/admin.devops.caicloud.io, headers={'Content-Type': 'application/json', 'Authorization': 'Basic YWRtaW46UHdkMTIzNDU2', 'X-Tenant': 'devops'},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20190220 17:58:02.224" endtime="20190220 17:58:02.226"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the</doc>
<arguments>
<arg>compass</arg>
<arg>v1/workspaces/${workspace}/pipelines</arg>
<arg>data=${pipelineJSON_${repo_type}_${codeSource}}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190220 17:58:02.508" level="INFO">Post Request using : alias=compass, uri=v1/workspaces/autoabcsvn/pipelines, data={"name":"autoabcsvn","alias":"autoabcsvn","description":"","build":{"buildInfo":{"buildTool":{},"cacheDependency":false},"builderImage":{"image":"test.caicloudprivatetest.com/library/golang:1.9.5-alpine3.7"},"stages":{"codeCheckout":{"mainRepo":{"type":"SVN","svn":{"ref":"","url":"https://192.168.130.29/svn/repo1/"}}},"package":{"command":["cd helloworld\nCGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build"]},"imageBuild":{"buildInfos":[{"contextDir":".","dockerfile":"","dockerfilePath":"helloworld/Dockerfile","taskName":"imageBuild-be1rt","mark":"imageBuild-be1rt","imageName":"abcd"}]},"imageRelease":{"releasePolicies":[{"imageName":"abcd","type":"Always"}]}}}}, headers={'Content-Type': 'application/json', 'Authorization': 'Basic YWRtaW46UHdkMTIzNDU2', 'X-Tenant': 'devops'}, files=None, allow_redirects=True </msg>
<msg timestamp="20190220 17:58:02.509" level="INFO">${resp} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20190220 17:58:02.227" endtime="20190220 17:58:02.509"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20190220 17:58:02.510" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20190220 17:58:02.509" endtime="20190220 17:58:02.510"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<assign>
<var>${content}</var>
</assign>
<msg timestamp="20190220 17:58:02.512" level="INFO">${content} = {'id': '5c6d24a0bdcb2f00015824aa', 'name': 'autoabcsvn', 'alias': 'autoabcsvn', 'owner': 'admin', 'projectID': '5c6d249fbdcb2f00015824a9', 'build': {'buildInfo': {'buildTool': {}}, 'builderImage': {'i...</msg>
<status status="PASS" starttime="20190220 17:58:02.511" endtime="20190220 17:58:02.512"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${content}</arg>
</arguments>
<msg timestamp="20190220 17:58:02.514" level="INFO">{'id': '5c6d24a0bdcb2f00015824aa', 'name': 'autoabcsvn', 'alias': 'autoabcsvn', 'owner': 'admin', 'projectID': '5c6d249fbdcb2f00015824a9', 'build': {'buildInfo': {'buildTool': {}}, 'builderImage': {'image': 'test.caicloudprivatetest.com/library/golang:1.9.5-alpine3.7'}, 'stages': {'codeCheckout': {'mainRepo': {'type': 'SVN', 'svn': {'url': 'https://192.168.130.29/svn/repo1/'}}}, 'package': {'command': ['cd helloworld\nCGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build']}, 'imageBuild': {'buildInfos': [{'taskName': 'imageBuild-be1rt', 'contextDir': '.', 'dockerfilePath': 'helloworld/Dockerfile', 'imageName': 'abcd'}]}, 'imageRelease': {'releasePolicies': [{'imageName': 'abcd', 'type': 'Always'}]}}}, 'creationTime': '2019-02-20T17:57:52.340493261+08:00', 'lastUpdateTime': '2019-02-20T17:57:52.340493453+08:00', 'annotations': {'tenant': 'devops'}}</msg>
<status status="PASS" starttime="20190220 17:58:02.513" endtime="20190220 17:58:02.515"></status>
</kw>
<status status="PASS" starttime="20190220 17:58:02.219" endtime="20190220 17:58:02.515"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>devops_获取pipeline</arg>
</arguments>
<msg timestamp="20190220 17:58:02.516" level="INFO">devops_获取pipeline</msg>
<status status="PASS" starttime="20190220 17:58:02.515" endtime="20190220 17:58:02.516"></status>
</kw>
<kw name="devops_获取pipeline" library="devopsAPI业务关键词">
<arguments>
<arg>svn</arg>
<arg>golang</arg>
<arg>${workspaceName_svn}</arg>
<arg>${pipelineName_svn}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=Basic YWRtaW46UHdkMTIzNDU2</arg>
<arg>X-Tenant=${namespace}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20190220 17:58:02.518" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'Basic YWRtaW46UHdkMTIzNDU2', 'X-Tenant': 'devops'}</msg>
<status status="PASS" starttime="20190220 17:58:02.518" endtime="20190220 17:58:02.519"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>compass</arg>
<arg>http://${compass_ip}:${api_port}/apis/admin.devops.caicloud.io</arg>
<arg>${header}</arg>
</arguments>
<msg timestamp="20190220 17:58:02.520" level="INFO">Creating Session using : alias=compass, url=http://192.168.129.130:6002/apis/admin.devops.caicloud.io, headers={'Content-Type': 'application/json', 'Authorization': 'Basic YWRtaW46UHdkMTIzNDU2', 'X-Tenant': 'devops'},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20190220 17:58:02.519" endtime="20190220 17:58:02.521"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the</doc>
<arguments>
<arg>compass</arg>
<arg>v1/workspaces/${workspace}/pipelines</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190220 17:58:02.821" level="INFO">Get Request using : alias=compass, uri=v1/workspaces/autoabcsvn/pipelines, headers={'Content-Type': 'application/json', 'Authorization': 'Basic YWRtaW46UHdkMTIzNDU2', 'X-Tenant': 'devops'} json=None</msg>
<msg timestamp="20190220 17:58:02.821" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190220 17:58:02.521" endtime="20190220 17:58:02.822"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20190220 17:58:02.825" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20190220 17:58:02.823" endtime="20190220 17:58:02.825"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<assign>
<var>${content}</var>
</assign>
<msg timestamp="20190220 17:58:02.829" level="INFO">${content} = {'metadata': {'total': 1}, 'items': [{'id': '5c6d24a0bdcb2f00015824aa', 'name': 'autoabcsvn', 'alias': 'autoabcsvn', 'owner': 'admin', 'projectID': '5c6d249fbdcb2f00015824a9', 'build': {'buildInfo': {...</msg>
<status status="PASS" starttime="20190220 17:58:02.827" endtime="20190220 17:58:02.829"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${content}</arg>
</arguments>
<msg timestamp="20190220 17:58:02.831" level="INFO">{'metadata': {'total': 1}, 'items': [{'id': '5c6d24a0bdcb2f00015824aa', 'name': 'autoabcsvn', 'alias': 'autoabcsvn', 'owner': 'admin', 'projectID': '5c6d249fbdcb2f00015824a9', 'build': {'buildInfo': {'buildTool': {}}, 'builderImage': {'image': 'test.caicloudprivatetest.com/library/golang:1.9.5-alpine3.7'}, 'stages': {'codeCheckout': {'mainRepo': {'type': 'SVN', 'svn': {'url': 'https://192.168.130.29/svn/repo1/'}}}, 'package': {'command': ['cd helloworld\nCGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build']}, 'imageBuild': {'buildInfos': [{'taskName': 'imageBuild-be1rt', 'contextDir': '.', 'dockerfilePath': 'helloworld/Dockerfile', 'imageName': 'abcd'}]}, 'imageRelease': {'releasePolicies': [{'imageName': 'abcd', 'type': 'Always'}]}}}, 'creationTime': '2019-02-20T17:57:52.34+08:00', 'lastUpdateTime': '2019-02-20T17:57:52.34+08:00', 'annotations': {'tenant': 'devops'}}]}</msg>
<status status="PASS" starttime="20190220 17:58:02.830" endtime="20190220 17:58:02.831"></status>
</kw>
<status status="PASS" starttime="20190220 17:58:02.517" endtime="20190220 17:58:02.832"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>devops_执行pipeline</arg>
</arguments>
<msg timestamp="20190220 17:58:02.833" level="INFO">devops_执行pipeline</msg>
<status status="PASS" starttime="20190220 17:58:02.832" endtime="20190220 17:58:02.834"></status>
</kw>
<kw name="devops_执行pipeline" library="devopsAPI业务关键词">
<arguments>
<arg>svn</arg>
<arg>${workspaceName_svn}</arg>
<arg>${pipelineName_svn}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=Basic YWRtaW46UHdkMTIzNDU2</arg>
<arg>X-Tenant=${namespace}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20190220 17:58:02.837" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'Basic YWRtaW46UHdkMTIzNDU2', 'X-Tenant': 'devops'}</msg>
<status status="PASS" starttime="20190220 17:58:02.836" endtime="20190220 17:58:02.838"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>compass</arg>
<arg>http://${compass_ip}:${api_port}/apis/admin.devops.caicloud.io</arg>
<arg>${header}</arg>
</arguments>
<msg timestamp="20190220 17:58:02.839" level="INFO">Creating Session using : alias=compass, url=http://192.168.129.130:6002/apis/admin.devops.caicloud.io, headers={'Content-Type': 'application/json', 'Authorization': 'Basic YWRtaW46UHdkMTIzNDU2', 'X-Tenant': 'devops'},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20190220 17:58:02.838" endtime="20190220 17:58:02.840"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the</doc>
<arguments>
<arg>compass</arg>
<arg>v1/workspaces/${workspace}/pipelines/${pipeline}/records</arg>
<arg>data=${recordJSON_${repo_type}}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190220 17:58:03.197" level="INFO">Post Request using : alias=compass, uri=v1/workspaces/autoabcsvn/pipelines/autoabcsvn/records, data={"stages":["codeCheckout","package","imageBuild","imageRelease"],"workspace":"autoabcsvn","pipeline":"autoabcsvn","codeRef":{"type":"https://192.168.130.29/svn/repo1/"},"repoName":"","repoType":"svn","tagType":"default","cacheDependency":false}, headers={'Content-Type': 'application/json', 'Authorization': 'Basic YWRtaW46UHdkMTIzNDU2', 'X-Tenant': 'devops'}, files=None, allow_redirects=True </msg>
<msg timestamp="20190220 17:58:03.198" level="INFO">${resp} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20190220 17:58:02.840" endtime="20190220 17:58:03.198"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20190220 17:58:03.199" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20190220 17:58:03.199" endtime="20190220 17:58:03.200"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<assign>
<var>${content}</var>
</assign>
<msg timestamp="20190220 17:58:03.202" level="INFO">${content} = {'id': '5c6d24a0bdcb2f00015824ab', 'pipelineID': '5c6d24a0bdcb2f00015824aa', 'trigger': 'admin', 'performParams': {'stages': ['codeCheckout', 'package', 'imageBuild', 'imageRelease']}, 'status': 'Pend...</msg>
<status status="PASS" starttime="20190220 17:58:03.201" endtime="20190220 17:58:03.202"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${content}</arg>
</arguments>
<msg timestamp="20190220 17:58:03.203" level="INFO">{'id': '5c6d24a0bdcb2f00015824ab', 'pipelineID': '5c6d24a0bdcb2f00015824aa', 'trigger': 'admin', 'performParams': {'stages': ['codeCheckout', 'package', 'imageBuild', 'imageRelease']}, 'status': 'Pending', 'startTime': '2019-02-20T17:57:52.970816693+08:00', 'endTime': '0001-01-01T00:00:00Z'}</msg>
<status status="PASS" starttime="20190220 17:58:03.203" endtime="20190220 17:58:03.204"></status>
</kw>
<status status="PASS" starttime="20190220 17:58:02.835" endtime="20190220 17:58:03.204"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>等待devops_pipeline执行结果</arg>
</arguments>
<msg timestamp="20190220 17:58:03.205" level="INFO">等待devops_pipeline执行结果</msg>
<status status="PASS" starttime="20190220 17:58:03.205" endtime="20190220 17:58:03.206"></status>
</kw>
<kw name="devops_pipeline执行结果_流水线执行完毕" library="devopsAPI业务关键词">
<arguments>
<arg>svn</arg>
<arg>${workspaceName_svn}</arg>
<arg>${pipelineName_svn}</arg>
</arguments>
<assign>
<var>${return}</var>
</assign>
<kw name="${i} IN RANGE [ 100 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>60</arg>
</arguments>
<msg timestamp="20190220 17:59:03.209" level="INFO">Slept 1 minute</msg>
<status status="PASS" starttime="20190220 17:58:03.208" endtime="20190220 17:59:03.210"></status>
</kw>
<kw name="devops_pipeline执行结果" library="devopsAPI业务关键词">
<arguments>
<arg>${repo_type}</arg>
<arg>${workspace}</arg>
<arg>${pipeline}</arg>
</arguments>
<assign>
<var>${return}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=Basic YWRtaW46UHdkMTIzNDU2</arg>
<arg>X-Tenant=${namespace}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20190220 17:59:03.220" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'Basic YWRtaW46UHdkMTIzNDU2', 'X-Tenant': 'devops'}</msg>
<status status="PASS" starttime="20190220 17:59:03.218" endtime="20190220 17:59:03.220"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>compass</arg>
<arg>http://${compass_ip}:${api_port}/apis/admin.devops.caicloud.io</arg>
<arg>${header}</arg>
</arguments>
<msg timestamp="20190220 17:59:03.222" level="INFO">Creating Session using : alias=compass, url=http://192.168.129.130:6002/apis/admin.devops.caicloud.io, headers={'Content-Type': 'application/json', 'Authorization': 'Basic YWRtaW46UHdkMTIzNDU2', 'X-Tenant': 'devops'},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20190220 17:59:03.221" endtime="20190220 17:59:03.223"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the</doc>
<arguments>
<arg>compass</arg>
<arg>v1/workspaces/${workspace}/pipelines/${pipeline}/records</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190220 17:59:03.536" level="INFO">Get Request using : alias=compass, uri=v1/workspaces/autoabcsvn/pipelines/autoabcsvn/records, headers={'Content-Type': 'application/json', 'Authorization': 'Basic YWRtaW46UHdkMTIzNDU2', 'X-Tenant': 'devops'} json=None</msg>
<msg timestamp="20190220 17:59:03.537" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190220 17:59:03.223" endtime="20190220 17:59:03.537"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20190220 17:59:03.539" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20190220 17:59:03.538" endtime="20190220 17:59:03.539"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<assign>
<var>${content}</var>
</assign>
<msg timestamp="20190220 17:59:03.541" level="INFO">${content} = {'metadata': {'total': 1}, 'items': [{'id': '5c6d24a0bdcb2f00015824ab', 'name': '21-190220175800', 'pipelineID': '5c6d24a0bdcb2f00015824aa', 'trigger': 'admin', 'performParams': {'stages': ['codeCheck...</msg>
<status status="PASS" starttime="20190220 17:59:03.540" endtime="20190220 17:59:03.542"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${content['items'][0]['status']}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20190220 17:59:03.544" level="INFO">${result} = Success</msg>
<status status="PASS" starttime="20190220 17:59:03.543" endtime="20190220 17:59:03.544"></status>
</kw>
<msg timestamp="20190220 17:59:03.545" level="INFO">${return} = Success</msg>
<status status="PASS" starttime="20190220 17:59:03.211" endtime="20190220 17:59:03.545"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${return}'=='Success'</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20190220 17:59:03.548" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20190220 17:59:03.547" endtime="20190220 17:59:03.548"></status>
</kw>
<status status="PASS" starttime="20190220 17:59:03.546" endtime="20190220 17:59:03.549"></status>
</kw>
<status status="PASS" starttime="20190220 17:58:03.207" endtime="20190220 17:59:03.549"></status>
</kw>
<status status="PASS" starttime="20190220 17:58:03.207" endtime="20190220 17:59:03.550"></status>
</kw>
<msg timestamp="20190220 17:59:03.550" level="INFO">${return} = Success</msg>
<status status="PASS" starttime="20190220 17:58:03.206" endtime="20190220 17:59:03.551"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>断言执行结果为success</arg>
</arguments>
<msg timestamp="20190220 17:59:03.552" level="INFO">断言执行结果为success</msg>
<status status="PASS" starttime="20190220 17:59:03.552" endtime="20190220 17:59:03.553"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Be Equal As Strings</arg>
<arg>'${return}'</arg>
<arg>'Success'</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>'${return}'</arg>
<arg>'Success'</arg>
</arguments>
<status status="PASS" starttime="20190220 17:59:03.554" endtime="20190220 17:59:03.555"></status>
</kw>
<status status="PASS" starttime="20190220 17:59:03.553" endtime="20190220 17:59:03.555"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>devops_获取pipeline执行记录</arg>
</arguments>
<msg timestamp="20190220 17:59:03.556" level="INFO">devops_获取pipeline执行记录</msg>
<status status="PASS" starttime="20190220 17:59:03.556" endtime="20190220 17:59:03.556"></status>
</kw>
<kw name="devops_获取pipeline执行记录" library="devopsAPI业务关键词">
<arguments>
<arg>svn</arg>
<arg>${workspaceName_svn}</arg>
<arg>${pipelineName_svn}</arg>
</arguments>
<assign>
<var>${pipeline_id}</var>
<var>${task_name}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=Basic YWRtaW46UHdkMTIzNDU2</arg>
<arg>X-Tenant=${namespace}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20190220 17:59:03.559" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'Basic YWRtaW46UHdkMTIzNDU2', 'X-Tenant': 'devops'}</msg>
<status status="PASS" starttime="20190220 17:59:03.558" endtime="20190220 17:59:03.559"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>compass</arg>
<arg>http://${compass_ip}:${api_port}/apis/admin.devops.caicloud.io</arg>
<arg>${header}</arg>
</arguments>
<msg timestamp="20190220 17:59:03.560" level="INFO">Creating Session using : alias=compass, url=http://192.168.129.130:6002/apis/admin.devops.caicloud.io, headers={'Content-Type': 'application/json', 'Authorization': 'Basic YWRtaW46UHdkMTIzNDU2', 'X-Tenant': 'devops'},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20190220 17:59:03.560" endtime="20190220 17:59:03.561"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the</doc>
<arguments>
<arg>compass</arg>
<arg>v1/workspaces/${workspace}/pipelines/${pipeline}/records</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190220 17:59:03.899" level="INFO">Get Request using : alias=compass, uri=v1/workspaces/autoabcsvn/pipelines/autoabcsvn/records, headers={'Content-Type': 'application/json', 'Authorization': 'Basic YWRtaW46UHdkMTIzNDU2', 'X-Tenant': 'devops'} json=None</msg>
<msg timestamp="20190220 17:59:03.900" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190220 17:59:03.561" endtime="20190220 17:59:03.900"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20190220 17:59:03.904" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20190220 17:59:03.902" endtime="20190220 17:59:03.904"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<assign>
<var>${content}</var>
</assign>
<msg timestamp="20190220 17:59:03.907" level="INFO">${content} = {'metadata': {'total': 1}, 'items': [{'id': '5c6d24a0bdcb2f00015824ab', 'name': '21-190220175800', 'pipelineID': '5c6d24a0bdcb2f00015824aa', 'trigger': 'admin', 'performParams': {'stages': ['codeCheck...</msg>
<status status="PASS" starttime="20190220 17:59:03.905" endtime="20190220 17:59:03.908"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${content['items'][0]['id']}</arg>
</arguments>
<assign>
<var>${pipeline_id}</var>
</assign>
<msg timestamp="20190220 17:59:03.909" level="INFO">${pipeline_id} = 5c6d24a0bdcb2f00015824ab</msg>
<status status="PASS" starttime="20190220 17:59:03.908" endtime="20190220 17:59:03.910"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${content['items'][0]['stageStatus']['imageBuild']['tasks'][0]['name']}</arg>
</arguments>
<assign>
<var>${task_name}</var>
</assign>
<msg timestamp="20190220 17:59:03.912" level="INFO">${task_name} = imageBuild-be1rt</msg>
<status status="PASS" starttime="20190220 17:59:03.911" endtime="20190220 17:59:03.912"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${pipeline_id}</arg>
</arguments>
<msg timestamp="20190220 17:59:03.913" level="INFO">5c6d24a0bdcb2f00015824ab</msg>
<status status="PASS" starttime="20190220 17:59:03.912" endtime="20190220 17:59:03.913"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${task_name}</arg>
</arguments>
<msg timestamp="20190220 17:59:03.914" level="INFO">imageBuild-be1rt</msg>
<status status="PASS" starttime="20190220 17:59:03.913" endtime="20190220 17:59:03.914"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${content}</arg>
</arguments>
<msg timestamp="20190220 17:59:03.915" level="INFO">{'metadata': {'total': 1}, 'items': [{'id': '5c6d24a0bdcb2f00015824ab', 'name': '21-190220175800', 'pipelineID': '5c6d24a0bdcb2f00015824aa', 'trigger': 'admin', 'performParams': {'stages': ['codeCheckout', 'package', 'imageBuild', 'imageRelease']}, 'stageStatus': {'codeCheckout': {'status': 'Success', 'startTime': '2019-02-20T17:58:04.41+08:00', 'endTime': '2019-02-20T17:58:04.562+08:00', 'commits': {'mainRepo': {'repoName': 'https://192.168.130.29/svn/repo1/', 'id': '21', 'author': 'user001', 'date': '2018-12-29T15:28:21+08:00'}}}, 'package': {'status': 'Success', 'startTime': '2019-02-20T17:58:04.566+08:00', 'endTime': '2019-02-20T17:58:17.488+08:00'}, 'imageBuild': {'status': 'Success', 'startTime': '2019-02-20T17:58:17.493+08:00', 'endTime': '2019-02-20T17:58:35.459+08:00', 'tasks': [{'name': 'imageBuild-be1rt', 'status': 'Success', 'startTime': '2019-02-20T17:58:17.493+08:00', 'endTime': '2019-02-20T17:58:35.459+08:00', 'image': 'test.caicloudprivatetest.com/devops_autoabcsvn/abcd:21-190220175800'}]}, 'imageRelease': {'status': 'Success', 'startTime': '2019-02-20T17:58:35.464+08:00', 'endTime': '2019-02-20T17:58:51.366+08:00', 'tasks': [{'name': 'test.caicloudprivatetest.com/devops_autoabcsvn/abcd:21-190220175800', 'status': 'Success', 'startTime': '2019-02-20T17:58:35.464+08:00', 'endTime': '2019-02-20T17:58:51.366+08:00', 'image': 'test.caicloudprivatetest.com/devops_autoabcsvn/abcd:21-190220175800'}]}}, 'status': 'Success', 'startTime': '2019-02-20T17:58:00.31+08:00', 'endTime': '2019-02-20T17:58:51.391+08:00'}]}</msg>
<status status="PASS" starttime="20190220 17:59:03.914" endtime="20190220 17:59:03.915"></status>
</kw>
<msg timestamp="20190220 17:59:03.915" level="INFO">${pipeline_id} = 5c6d24a0bdcb2f00015824ab</msg>
<msg timestamp="20190220 17:59:03.916" level="INFO">${task_name} = imageBuild-be1rt</msg>
<status status="PASS" starttime="20190220 17:59:03.557" endtime="20190220 17:59:03.916"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>devops_获取pipeline执行log</arg>
</arguments>
<msg timestamp="20190220 17:59:03.916" level="INFO">devops_获取pipeline执行log</msg>
<status status="PASS" starttime="20190220 17:59:03.916" endtime="20190220 17:59:03.917"></status>
</kw>
<kw name="devops_获取pipeline执行log" library="devopsAPI业务关键词">
<arguments>
<arg>${pipeline_id}</arg>
<arg>${task_name}</arg>
<arg>imageBuild</arg>
<arg>svn</arg>
<arg>${workspaceName_svn}</arg>
<arg>${pipelineName_svn}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=Basic YWRtaW46UHdkMTIzNDU2</arg>
<arg>X-Tenant=${namespace}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20190220 17:59:03.919" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'Basic YWRtaW46UHdkMTIzNDU2', 'X-Tenant': 'devops'}</msg>
<status status="PASS" starttime="20190220 17:59:03.918" endtime="20190220 17:59:03.919"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>compass</arg>
<arg>http://${compass_ip}:${api_port}/apis/admin.devops.caicloud.io</arg>
<arg>${header}</arg>
</arguments>
<msg timestamp="20190220 17:59:03.920" level="INFO">Creating Session using : alias=compass, url=http://192.168.129.130:6002/apis/admin.devops.caicloud.io, headers={'Content-Type': 'application/json', 'Authorization': 'Basic YWRtaW46UHdkMTIzNDU2', 'X-Tenant': 'devops'},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20190220 17:59:03.920" endtime="20190220 17:59:03.921"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the</doc>
<arguments>
<arg>compass</arg>
<arg>v1/workspaces/${workspace}/pipelines/${pipeline}/records/${pipeline_id}/logs?stage=${stage}&amp;task=${task_name}&amp;download=false</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190220 17:59:04.217" level="INFO">Get Request using : alias=compass, uri=v1/workspaces/autoabcsvn/pipelines/autoabcsvn/records/5c6d24a0bdcb2f00015824ab/logs?stage=imageBuild&amp;task=imageBuild-be1rt&amp;download=false, headers={'Content-Type': 'application/json', 'Authorization': 'Basic YWRtaW46UHdkMTIzNDU2', 'X-Tenant': 'devops'} json=None</msg>
<msg timestamp="20190220 17:59:04.217" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190220 17:59:03.921" endtime="20190220 17:59:04.218"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20190220 17:59:04.220" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20190220 17:59:04.219" endtime="20190220 17:59:04.221"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<msg timestamp="20190220 17:59:04.223" level="INFO">&lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190220 17:59:04.222" endtime="20190220 17:59:04.223"></status>
</kw>
<status status="PASS" starttime="20190220 17:59:03.917" endtime="20190220 17:59:04.224"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>获取流水线执行记录ID</arg>
</arguments>
<msg timestamp="20190220 17:59:04.226" level="INFO">获取流水线执行记录ID</msg>
<status status="PASS" starttime="20190220 17:59:04.225" endtime="20190220 17:59:04.227"></status>
</kw>
<kw name="devops_pipeline获取执行记录ID" library="devopsAPI业务关键词">
<arguments>
<arg>svn</arg>
<arg>${workspaceName_svn}</arg>
<arg>${pipelineName_svn}</arg>
</arguments>
<assign>
<var>${pipelien_log_ID}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=Basic YWRtaW46UHdkMTIzNDU2</arg>
<arg>X-Tenant=${namespace}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20190220 17:59:04.230" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'Basic YWRtaW46UHdkMTIzNDU2', 'X-Tenant': 'devops'}</msg>
<status status="PASS" starttime="20190220 17:59:04.229" endtime="20190220 17:59:04.231"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>compass</arg>
<arg>http://${compass_ip}:${api_port}/apis/admin.devops.caicloud.io</arg>
<arg>${header}</arg>
</arguments>
<msg timestamp="20190220 17:59:04.232" level="INFO">Creating Session using : alias=compass, url=http://192.168.129.130:6002/apis/admin.devops.caicloud.io, headers={'Content-Type': 'application/json', 'Authorization': 'Basic YWRtaW46UHdkMTIzNDU2', 'X-Tenant': 'devops'},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20190220 17:59:04.231" endtime="20190220 17:59:04.233"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the</doc>
<arguments>
<arg>compass</arg>
<arg>v1/workspaces/${workspace}/pipelines/${pipeline}/records</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190220 17:59:04.469" level="INFO">Get Request using : alias=compass, uri=v1/workspaces/autoabcsvn/pipelines/autoabcsvn/records, headers={'Content-Type': 'application/json', 'Authorization': 'Basic YWRtaW46UHdkMTIzNDU2', 'X-Tenant': 'devops'} json=None</msg>
<msg timestamp="20190220 17:59:04.470" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190220 17:59:04.233" endtime="20190220 17:59:04.470"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20190220 17:59:04.472" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20190220 17:59:04.471" endtime="20190220 17:59:04.473"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<assign>
<var>${content}</var>
</assign>
<msg timestamp="20190220 17:59:04.475" level="INFO">${content} = {'metadata': {'total': 1}, 'items': [{'id': '5c6d24a0bdcb2f00015824ab', 'name': '21-190220175800', 'pipelineID': '5c6d24a0bdcb2f00015824aa', 'trigger': 'admin', 'performParams': {'stages': ['codeCheck...</msg>
<status status="PASS" starttime="20190220 17:59:04.473" endtime="20190220 17:59:04.476"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${content['items'][0]['id']}</arg>
</arguments>
<assign>
<var>${pipelien_log_ID}</var>
</assign>
<msg timestamp="20190220 17:59:04.478" level="INFO">${pipelien_log_ID} = 5c6d24a0bdcb2f00015824ab</msg>
<status status="PASS" starttime="20190220 17:59:04.477" endtime="20190220 17:59:04.478"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${pipelien_log_ID}</arg>
</arguments>
<msg timestamp="20190220 17:59:04.480" level="INFO">5c6d24a0bdcb2f00015824ab</msg>
<status status="PASS" starttime="20190220 17:59:04.479" endtime="20190220 17:59:04.481"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${content}</arg>
</arguments>
<msg timestamp="20190220 17:59:04.483" level="INFO">{'metadata': {'total': 1}, 'items': [{'id': '5c6d24a0bdcb2f00015824ab', 'name': '21-190220175800', 'pipelineID': '5c6d24a0bdcb2f00015824aa', 'trigger': 'admin', 'performParams': {'stages': ['codeCheckout', 'package', 'imageBuild', 'imageRelease']}, 'stageStatus': {'codeCheckout': {'status': 'Success', 'startTime': '2019-02-20T17:58:04.41+08:00', 'endTime': '2019-02-20T17:58:04.562+08:00', 'commits': {'mainRepo': {'repoName': 'https://192.168.130.29/svn/repo1/', 'id': '21', 'author': 'user001', 'date': '2018-12-29T15:28:21+08:00'}}}, 'package': {'status': 'Success', 'startTime': '2019-02-20T17:58:04.566+08:00', 'endTime': '2019-02-20T17:58:17.488+08:00'}, 'imageBuild': {'status': 'Success', 'startTime': '2019-02-20T17:58:17.493+08:00', 'endTime': '2019-02-20T17:58:35.459+08:00', 'tasks': [{'name': 'imageBuild-be1rt', 'status': 'Success', 'startTime': '2019-02-20T17:58:17.493+08:00', 'endTime': '2019-02-20T17:58:35.459+08:00', 'image': 'test.caicloudprivatetest.com/devops_autoabcsvn/abcd:21-190220175800'}]}, 'imageRelease': {'status': 'Success', 'startTime': '2019-02-20T17:58:35.464+08:00', 'endTime': '2019-02-20T17:58:51.366+08:00', 'tasks': [{'name': 'test.caicloudprivatetest.com/devops_autoabcsvn/abcd:21-190220175800', 'status': 'Success', 'startTime': '2019-02-20T17:58:35.464+08:00', 'endTime': '2019-02-20T17:58:51.366+08:00', 'image': 'test.caicloudprivatetest.com/devops_autoabcsvn/abcd:21-190220175800'}]}}, 'status': 'Success', 'startTime': '2019-02-20T17:58:00.31+08:00', 'endTime': '2019-02-20T17:58:51.391+08:00'}]}</msg>
<status status="PASS" starttime="20190220 17:59:04.482" endtime="20190220 17:59:04.483"></status>
</kw>
<msg timestamp="20190220 17:59:04.484" level="INFO">${pipelien_log_ID} = 5c6d24a0bdcb2f00015824ab</msg>
<status status="PASS" starttime="20190220 17:59:04.228" endtime="20190220 17:59:04.485"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>删除流水线执行记录</arg>
</arguments>
<msg timestamp="20190220 17:59:04.487" level="INFO">删除流水线执行记录</msg>
<status status="PASS" starttime="20190220 17:59:04.486" endtime="20190220 17:59:04.487"></status>
</kw>
<kw name="devops_pipeline删除流水线执行记录" library="devopsAPI业务关键词">
<arguments>
<arg>${pipelien_log_ID}</arg>
<arg>svn</arg>
<arg>${workspaceName_svn}</arg>
<arg>${pipelineName_svn}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=Basic YWRtaW46UHdkMTIzNDU2</arg>
<arg>X-Tenant=${namespace}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20190220 17:59:04.490" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'Basic YWRtaW46UHdkMTIzNDU2', 'X-Tenant': 'devops'}</msg>
<status status="PASS" starttime="20190220 17:59:04.489" endtime="20190220 17:59:04.490"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>compass</arg>
<arg>http://${compass_ip}:${api_port}/apis/admin.devops.caicloud.io</arg>
<arg>${header}</arg>
</arguments>
<msg timestamp="20190220 17:59:04.492" level="INFO">Creating Session using : alias=compass, url=http://192.168.129.130:6002/apis/admin.devops.caicloud.io, headers={'Content-Type': 'application/json', 'Authorization': 'Basic YWRtaW46UHdkMTIzNDU2', 'X-Tenant': 'devops'},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20190220 17:59:04.491" endtime="20190220 17:59:04.492"></status>
</kw>
<kw name="Delete Request" library="RequestsLibrary">
<doc>Send a DELETE request on the session object found using the</doc>
<arguments>
<arg>compass</arg>
<arg>v1/workspaces/${workspace}/pipelines/${pipeline}/records/${pipelien_log_ID}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190220 17:59:04.925" level="INFO">Delete Request using : alias=compass, uri=v1/workspaces/autoabcsvn/pipelines/autoabcsvn/records/5c6d24a0bdcb2f00015824ab, data=[],                     headers={'Content-Type': 'application/json', 'Authorization': 'Basic YWRtaW46UHdkMTIzNDU2', 'X-Tenant': 'devops'}, allow_redirects=True </msg>
<msg timestamp="20190220 17:59:04.926" level="INFO">${resp} = &lt;Response [204]&gt;</msg>
<status status="PASS" starttime="20190220 17:59:04.493" endtime="20190220 17:59:04.926"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>204</arg>
</arguments>
<msg timestamp="20190220 17:59:04.929" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20190220 17:59:04.928" endtime="20190220 17:59:04.929"></status>
</kw>
<status status="PASS" starttime="20190220 17:59:04.488" endtime="20190220 17:59:04.930"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>删除流水线</arg>
</arguments>
<msg timestamp="20190220 17:59:04.931" level="INFO">删除流水线</msg>
<status status="PASS" starttime="20190220 17:59:04.931" endtime="20190220 17:59:04.932"></status>
</kw>
<kw name="devops_pipeline删除流水线" library="devopsAPI业务关键词">
<arguments>
<arg>svn</arg>
<arg>${workspaceName_svn}</arg>
<arg>${pipelineName_svn}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=Basic YWRtaW46UHdkMTIzNDU2</arg>
<arg>X-Tenant=${namespace}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20190220 17:59:04.935" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'Basic YWRtaW46UHdkMTIzNDU2', 'X-Tenant': 'devops'}</msg>
<status status="PASS" starttime="20190220 17:59:04.934" endtime="20190220 17:59:04.935"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>compass</arg>
<arg>http://${compass_ip}:${api_port}/apis/admin.devops.caicloud.io</arg>
<arg>${header}</arg>
</arguments>
<msg timestamp="20190220 17:59:04.937" level="INFO">Creating Session using : alias=compass, url=http://192.168.129.130:6002/apis/admin.devops.caicloud.io, headers={'Content-Type': 'application/json', 'Authorization': 'Basic YWRtaW46UHdkMTIzNDU2', 'X-Tenant': 'devops'},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20190220 17:59:04.936" endtime="20190220 17:59:04.938"></status>
</kw>
<kw name="Delete Request" library="RequestsLibrary">
<doc>Send a DELETE request on the session object found using the</doc>
<arguments>
<arg>compass</arg>
<arg>v1/workspaces/${workspace}/pipelines/${pipeline}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190220 17:59:05.270" level="INFO">Delete Request using : alias=compass, uri=v1/workspaces/autoabcsvn/pipelines/autoabcsvn, data=[],                     headers={'Content-Type': 'application/json', 'Authorization': 'Basic YWRtaW46UHdkMTIzNDU2', 'X-Tenant': 'devops'}, allow_redirects=True </msg>
<msg timestamp="20190220 17:59:05.271" level="INFO">${resp} = &lt;Response [204]&gt;</msg>
<status status="PASS" starttime="20190220 17:59:04.938" endtime="20190220 17:59:05.271"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>204</arg>
</arguments>
<msg timestamp="20190220 17:59:05.273" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20190220 17:59:05.272" endtime="20190220 17:59:05.273"></status>
</kw>
<status status="PASS" starttime="20190220 17:59:04.932" endtime="20190220 17:59:05.274"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>删除流水线组</arg>
</arguments>
<msg timestamp="20190220 17:59:05.275" level="INFO">删除流水线组</msg>
<status status="PASS" starttime="20190220 17:59:05.274" endtime="20190220 17:59:05.275"></status>
</kw>
<kw name="devops_删除workspace" library="devopsAPI业务关键词">
<arguments>
<arg>svn</arg>
<arg>${workspaceName_svn}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=Basic YWRtaW46UHdkMTIzNDU2</arg>
<arg>X-Tenant=${namespace}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20190220 17:59:05.278" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'Basic YWRtaW46UHdkMTIzNDU2', 'X-Tenant': 'devops'}</msg>
<status status="PASS" starttime="20190220 17:59:05.276" endtime="20190220 17:59:05.278"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>compass</arg>
<arg>http://${compass_ip}:${api_port}/apis/admin.devops.caicloud.io</arg>
<arg>${header}</arg>
</arguments>
<msg timestamp="20190220 17:59:05.279" level="INFO">Creating Session using : alias=compass, url=http://192.168.129.130:6002/apis/admin.devops.caicloud.io, headers={'Content-Type': 'application/json', 'Authorization': 'Basic YWRtaW46UHdkMTIzNDU2', 'X-Tenant': 'devops'},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20190220 17:59:05.278" endtime="20190220 17:59:05.279"></status>
</kw>
<kw name="Delete Request" library="RequestsLibrary">
<doc>Send a DELETE request on the session object found using the</doc>
<arguments>
<arg>compass</arg>
<arg>/v1/workspaces/${workspace}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190220 17:59:05.562" level="INFO">Delete Request using : alias=compass, uri=/v1/workspaces/autoabcsvn, data=[],                     headers={'Content-Type': 'application/json', 'Authorization': 'Basic YWRtaW46UHdkMTIzNDU2', 'X-Tenant': 'devops'}, allow_redirects=True </msg>
<msg timestamp="20190220 17:59:05.562" level="INFO">${resp} = &lt;Response [204]&gt;</msg>
<status status="PASS" starttime="20190220 17:59:05.279" endtime="20190220 17:59:05.562"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>204</arg>
</arguments>
<msg timestamp="20190220 17:59:05.563" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20190220 17:59:05.563" endtime="20190220 17:59:05.564"></status>
</kw>
<status status="PASS" starttime="20190220 17:59:05.275" endtime="20190220 17:59:05.564"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>devops_删除project</arg>
</arguments>
<msg timestamp="20190220 17:59:05.565" level="INFO">devops_删除project</msg>
<status status="PASS" starttime="20190220 17:59:05.565" endtime="20190220 17:59:05.565"></status>
</kw>
<kw name="devops_删除project" library="devopsAPI业务关键词">
<arguments>
<arg>${workspaceName_svn}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=Basic YWRtaW46UHdkMTIzNDU2</arg>
<arg>X-Tenant=${namespace}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20190220 17:59:05.567" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'Basic YWRtaW46UHdkMTIzNDU2', 'X-Tenant': 'devops'}</msg>
<status status="PASS" starttime="20190220 17:59:05.566" endtime="20190220 17:59:05.567"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>compass</arg>
<arg>http://${compass_ip}:${api_port}/apis/admin.cargo.caicloud.io</arg>
<arg>${header}</arg>
</arguments>
<msg timestamp="20190220 17:59:05.568" level="INFO">Creating Session using : alias=compass, url=http://192.168.129.130:6002/apis/admin.cargo.caicloud.io, headers={'Content-Type': 'application/json', 'Authorization': 'Basic YWRtaW46UHdkMTIzNDU2', 'X-Tenant': 'devops'},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20190220 17:59:05.567" endtime="20190220 17:59:05.568"></status>
</kw>
<kw name="Delete Request" library="RequestsLibrary">
<doc>Send a DELETE request on the session object found using the</doc>
<arguments>
<arg>compass</arg>
<arg>${url}/${registryName}/projects/${namespace}_${projectName_l}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190220 17:59:06.221" level="INFO">Delete Request using : alias=compass, uri=/v2/registries/default/projects/devops_autoabcsvn, data=[],                     headers={'Content-Type': 'application/json', 'Authorization': 'Basic YWRtaW46UHdkMTIzNDU2', 'X-Tenant': 'devops'}, allow_redirects=True </msg>
<msg timestamp="20190220 17:59:06.222" level="INFO">${resp} = &lt;Response [204]&gt;</msg>
<status status="PASS" starttime="20190220 17:59:05.569" endtime="20190220 17:59:06.222"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>204</arg>
</arguments>
<msg timestamp="20190220 17:59:06.224" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20190220 17:59:06.223" endtime="20190220 17:59:06.225"></status>
</kw>
<status status="PASS" starttime="20190220 17:59:05.566" endtime="20190220 17:59:06.226"></status>
</kw>
<status status="PASS" starttime="20190220 17:58:01.241" endtime="20190220 17:59:06.227" critical="yes"></status>
</test>
<test id="s1-s1-s1-s1-t4" name="devops_持续交付_gitlab_golang流水线tag触发">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>环境初始化</arg>
</arguments>
<msg timestamp="20190220 17:59:06.233" level="INFO">环境初始化</msg>
<status status="PASS" starttime="20190220 17:59:06.232" endtime="20190220 17:59:06.233"></status>
</kw>
<kw name="devops_判断是否已存在workspace" library="devopsAPI业务关键词">
<arguments>
<arg>${workspaceName_gitlab}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${0}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20190220 17:59:06.236" level="INFO">${result} = 0</msg>
<status status="PASS" starttime="20190220 17:59:06.235" endtime="20190220 17:59:06.236"></status>
</kw>
<kw name="devops_获取workspace" library="devopsAPI业务关键词">
<assign>
<var>${content}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=Basic YWRtaW46UHdkMTIzNDU2</arg>
<arg>X-Tenant=${namespace}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20190220 17:59:06.239" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'Basic YWRtaW46UHdkMTIzNDU2', 'X-Tenant': 'devops'}</msg>
<status status="PASS" starttime="20190220 17:59:06.238" endtime="20190220 17:59:06.240"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>compass</arg>
<arg>http://${compass_ip}:${api_port}/apis/admin.devops.caicloud.io</arg>
<arg>${header}</arg>
</arguments>
<msg timestamp="20190220 17:59:06.241" level="INFO">Creating Session using : alias=compass, url=http://192.168.129.130:6002/apis/admin.devops.caicloud.io, headers={'Content-Type': 'application/json', 'Authorization': 'Basic YWRtaW46UHdkMTIzNDU2', 'X-Tenant': 'devops'},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20190220 17:59:06.240" endtime="20190220 17:59:06.243"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the</doc>
<arguments>
<arg>compass</arg>
<arg>${url}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190220 17:59:06.527" level="INFO">Get Request using : alias=compass, uri=/v1/workspaces, headers={'Content-Type': 'application/json', 'Authorization': 'Basic YWRtaW46UHdkMTIzNDU2', 'X-Tenant': 'devops'} json=None</msg>
<msg timestamp="20190220 17:59:06.528" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190220 17:59:06.243" endtime="20190220 17:59:06.528"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20190220 17:59:06.530" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20190220 17:59:06.529" endtime="20190220 17:59:06.530"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<assign>
<var>${content}</var>
</assign>
<msg timestamp="20190220 17:59:06.532" level="INFO">${content} = {'metadata': {'total': 0}, 'items': []}</msg>
<status status="PASS" starttime="20190220 17:59:06.531" endtime="20190220 17:59:06.532"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${content}</arg>
</arguments>
<msg timestamp="20190220 17:59:06.534" level="INFO">{'metadata': {'total': 0}, 'items': []}</msg>
<status status="PASS" starttime="20190220 17:59:06.533" endtime="20190220 17:59:06.534"></status>
</kw>
<msg timestamp="20190220 17:59:06.535" level="INFO">${content} = {'metadata': {'total': 0}, 'items': []}</msg>
<status status="PASS" starttime="20190220 17:59:06.237" endtime="20190220 17:59:06.535"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${content['metadata']['total']}</arg>
</arguments>
<assign>
<var>${number}</var>
</assign>
<msg timestamp="20190220 17:59:06.537" level="INFO">${number} = 0</msg>
<status status="PASS" starttime="20190220 17:59:06.536" endtime="20190220 17:59:06.538"></status>
</kw>
<kw name="${i} IN RANGE [ ${number} ]" type="for">
<status status="PASS" starttime="20190220 17:59:06.538" endtime="20190220 17:59:06.539"></status>
</kw>
<msg timestamp="20190220 17:59:06.540" level="INFO">${result} = 0</msg>
<status status="PASS" starttime="20190220 17:59:06.234" endtime="20190220 17:59:06.540"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${result}==${1}</arg>
<arg>devops_删除workspace</arg>
<arg>gitlab</arg>
<arg>${workspaceName_gitlab}</arg>
</arguments>
<status status="PASS" starttime="20190220 17:59:06.541" endtime="20190220 17:59:06.542"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>devops_创建workspace</arg>
</arguments>
<msg timestamp="20190220 17:59:06.543" level="INFO">devops_创建workspace</msg>
<status status="PASS" starttime="20190220 17:59:06.542" endtime="20190220 17:59:06.543"></status>
</kw>
<kw name="devops_创建workspace" library="devopsAPI业务关键词">
<arguments>
<arg>gitlab</arg>
</arguments>
<kw name="github流水线获取token" library="devopsAPI基础关键词">
<assign>
<var>${githubjson_token}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>base64.b64decode('${github_token}')</arg>
<arg>modules=base64</arg>
</arguments>
<assign>
<var>${kk}</var>
</assign>
<msg timestamp="20190220 17:59:06.547" level="INFO">${kk} = 7607cc6672d77fca99014ef987d0ab0e4564b40b</msg>
<status status="PASS" starttime="20190220 17:59:06.546" endtime="20190220 17:59:06.547"></status>
</kw>
<kw name="Decode Bytes To String" library="String">
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<arguments>
<arg>${kk}</arg>
<arg>UTF-8</arg>
</arguments>
<assign>
<var>${kkstr}</var>
</assign>
<msg timestamp="20190220 17:59:06.548" level="INFO">${kkstr} = 7607cc6672d77fca99014ef987d0ab0e4564b40b</msg>
<status status="PASS" starttime="20190220 17:59:06.547" endtime="20190220 17:59:06.548"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${kk}</arg>
</arguments>
<msg timestamp="20190220 17:59:06.549" level="INFO">7607cc6672d77fca99014ef987d0ab0e4564b40b</msg>
<status status="PASS" starttime="20190220 17:59:06.548" endtime="20190220 17:59:06.549"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${workspaceJSON_github}</arg>
</arguments>
<assign>
<var>${github_decode_token}</var>
</assign>
<msg timestamp="20190220 17:59:06.550" level="INFO">${github_decode_token} = {'scm': {'type': 'Github', 'authType': 'Token', 'username': ' ', 'server': 'https://github.com', 'token': 'NzYwN2NjNjY3MmQ3N2ZjYTk5MDE0ZWY5ODdkMGFiMGU0NTY0YjQwYg=='}, 'cargo': {'projectType': 'default...</msg>
<status status="PASS" starttime="20190220 17:59:06.549" endtime="20190220 17:59:06.550"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${github_decode_token['scm']}</arg>
<arg>token=${kkstr}</arg>
</arguments>
<status status="PASS" starttime="20190220 17:59:06.551" endtime="20190220 17:59:06.551"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${github_decode_token['scm']['token']}</arg>
</arguments>
<msg timestamp="20190220 17:59:06.553" level="INFO">7607cc6672d77fca99014ef987d0ab0e4564b40b</msg>
<status status="PASS" starttime="20190220 17:59:06.552" endtime="20190220 17:59:06.553"></status>
</kw>
<msg timestamp="20190220 17:59:06.554" level="INFO">${githubjson_token} = {'scm': {'type': 'Github', 'authType': 'Token', 'username': ' ', 'server': 'https://github.com', 'token': '7607cc6672d77fca99014ef987d0ab0e4564b40b'}, 'cargo': {'projectType': 'default', 'name': 'defa...</msg>
<status status="PASS" starttime="20190220 17:59:06.545" endtime="20190220 17:59:06.554"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${repo_type}'=='gitlab'</arg>
<arg>Set Variable</arg>
<arg>${workspaceJson_gitlab}</arg>
<arg>ELSE IF</arg>
<arg>'${repo_type}'=='github'</arg>
<arg>Set Variable</arg>
<arg>${githubjson_token}</arg>
<arg>ELSE IF</arg>
<arg>'${repo_type}'=='svn'</arg>
<arg>Set Variable</arg>
<arg>${workspaceJSON_svn}</arg>
</arguments>
<assign>
<var>${workspaceJson}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${workspaceJson_gitlab}</arg>
</arguments>
<status status="PASS" starttime="20190220 17:59:06.555" endtime="20190220 17:59:06.556"></status>
</kw>
<msg timestamp="20190220 17:59:06.556" level="INFO">${workspaceJson} = {"scm":{"type":"Gitlab","authType":"Password","username":"peter","server":"http://192.168.130.29:81","password":"1wonderful"},"cargo":{"projectType":"default","name":"default"},"workerQuota":{"cpuRequ...</msg>
<status status="PASS" starttime="20190220 17:59:06.554" endtime="20190220 17:59:06.556"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${workspaceJson}</arg>
</arguments>
<msg timestamp="20190220 17:59:06.557" level="INFO">{"scm":{"type":"Gitlab","authType":"Password","username":"peter","server":"http://192.168.130.29:81","password":"1wonderful"},"cargo":{"projectType":"default","name":"default"},"workerQuota":{"cpuRequests":"0.5","cpuLimits":"1","memoryRequests":"1Gi","memoryLimits":"2Gi"},"alias":"autoabcgitlab"}</msg>
<status status="PASS" starttime="20190220 17:59:06.557" endtime="20190220 17:59:06.558"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=Basic YWRtaW46UHdkMTIzNDU2</arg>
<arg>X-Tenant=${namespace}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20190220 17:59:06.559" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'Basic YWRtaW46UHdkMTIzNDU2', 'X-Tenant': 'devops'}</msg>
<status status="PASS" starttime="20190220 17:59:06.558" endtime="20190220 17:59:06.559"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>compass</arg>
<arg>http://${compass_ip}:${api_port}/apis/admin.devops.caicloud.io</arg>
<arg>${header}</arg>
</arguments>
<msg timestamp="20190220 17:59:06.561" level="INFO">Creating Session using : alias=compass, url=http://192.168.129.130:6002/apis/admin.devops.caicloud.io, headers={'Content-Type': 'application/json', 'Authorization': 'Basic YWRtaW46UHdkMTIzNDU2', 'X-Tenant': 'devops'},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20190220 17:59:06.560" endtime="20190220 17:59:06.561"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the</doc>
<arguments>
<arg>compass</arg>
<arg>/v1/workspaces</arg>
<arg>data=${workspaceJson}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190220 17:59:07.248" level="INFO">Post Request using : alias=compass, uri=/v1/workspaces, data={"scm":{"type":"Gitlab","authType":"Password","username":"peter","server":"http://192.168.130.29:81","password":"1wonderful"},"cargo":{"projectType":"default","name":"default"},"workerQuota":{"cpuRequests":"0.5","cpuLimits":"1","memoryRequests":"1Gi","memoryLimits":"2Gi"},"alias":"autoabcgitlab"}, headers={'Content-Type': 'application/json', 'Authorization': 'Basic YWRtaW46UHdkMTIzNDU2', 'X-Tenant': 'devops'}, files=None, allow_redirects=True </msg>
<msg timestamp="20190220 17:59:07.249" level="INFO">${resp} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20190220 17:59:06.562" endtime="20190220 17:59:07.250"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20190220 17:59:07.253" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20190220 17:59:07.251" endtime="20190220 17:59:07.253"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<assign>
<var>${content}</var>
</assign>
<msg timestamp="20190220 17:59:07.255" level="INFO">${content} = {'name': 'autoabcgitlab', 'alias': 'autoabcgitlab', 'description': '', 'owner': 'admin', 'scm': {'type': 'Gitlab', 'authType': 'Password', 'server': 'http://192.168.130.29:81', 'username': 'peter', 't...</msg>
<status status="PASS" starttime="20190220 17:59:07.254" endtime="20190220 17:59:07.255"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${content}</arg>
</arguments>
<msg timestamp="20190220 17:59:07.257" level="INFO">{'name': 'autoabcgitlab', 'alias': 'autoabcgitlab', 'description': '', 'owner': 'admin', 'scm': {'type': 'Gitlab', 'authType': 'Password', 'server': 'http://192.168.130.29:81', 'username': 'peter', 'token': 'sSkbDIX7AdNzK/N79cy4XCMjnnsxYCvyjI3qKECYQy+5XvV+jAf6XCN9Odk8HDVUUqvwfECy+aAMLCokS9Al+GHBVQoKaw9Do2qBYMMXsAw='}, 'pipelineCount': 0, 'cargo': {'name': 'default', 'project': 'devops_autoabcgitlab', 'host': 'test.caicloudprivatetest.com'}, 'cacheDependencies': None, 'workerQuota': {}, 'creationTime': '2019-02-20T17:58:56+08:00', 'lastUpdateTime': '2019-02-20T17:58:56+08:00'}</msg>
<status status="PASS" starttime="20190220 17:59:07.256" endtime="20190220 17:59:07.257"></status>
</kw>
<status status="PASS" starttime="20190220 17:59:06.544" endtime="20190220 17:59:07.258"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>devops_获取workspace</arg>
</arguments>
<msg timestamp="20190220 17:59:07.259" level="INFO">devops_获取workspace</msg>
<status status="PASS" starttime="20190220 17:59:07.258" endtime="20190220 17:59:07.259"></status>
</kw>
<kw name="devops_获取workspace" library="devopsAPI业务关键词">
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=Basic YWRtaW46UHdkMTIzNDU2</arg>
<arg>X-Tenant=${namespace}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20190220 17:59:07.261" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'Basic YWRtaW46UHdkMTIzNDU2', 'X-Tenant': 'devops'}</msg>
<status status="PASS" starttime="20190220 17:59:07.260" endtime="20190220 17:59:07.261"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>compass</arg>
<arg>http://${compass_ip}:${api_port}/apis/admin.devops.caicloud.io</arg>
<arg>${header}</arg>
</arguments>
<msg timestamp="20190220 17:59:07.262" level="INFO">Creating Session using : alias=compass, url=http://192.168.129.130:6002/apis/admin.devops.caicloud.io, headers={'Content-Type': 'application/json', 'Authorization': 'Basic YWRtaW46UHdkMTIzNDU2', 'X-Tenant': 'devops'},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20190220 17:59:07.261" endtime="20190220 17:59:07.262"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the</doc>
<arguments>
<arg>compass</arg>
<arg>${url}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190220 17:59:07.461" level="INFO">Get Request using : alias=compass, uri=/v1/workspaces, headers={'Content-Type': 'application/json', 'Authorization': 'Basic YWRtaW46UHdkMTIzNDU2', 'X-Tenant': 'devops'} json=None</msg>
<msg timestamp="20190220 17:59:07.462" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190220 17:59:07.263" endtime="20190220 17:59:07.462"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20190220 17:59:07.464" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20190220 17:59:07.463" endtime="20190220 17:59:07.465"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<assign>
<var>${content}</var>
</assign>
<msg timestamp="20190220 17:59:07.467" level="INFO">${content} = {'metadata': {'total': 1}, 'items': [{'name': 'autoabcgitlab', 'alias': 'autoabcgitlab', 'description': '', 'owner': 'admin', 'scm': {'type': 'Gitlab', 'authType': 'Password', 'server': 'http://192.16...</msg>
<status status="PASS" starttime="20190220 17:59:07.465" endtime="20190220 17:59:07.467"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${content}</arg>
</arguments>
<msg timestamp="20190220 17:59:07.469" level="INFO">{'metadata': {'total': 1}, 'items': [{'name': 'autoabcgitlab', 'alias': 'autoabcgitlab', 'description': '', 'owner': 'admin', 'scm': {'type': 'Gitlab', 'authType': 'Password', 'server': 'http://192.168.130.29:81', 'username': 'peter', 'token': 'ccf05205b7f8e37a0e89d2f20fc48e36e24aff5e2dc2f58933cfca92c4191236'}, 'pipelineCount': 0, 'cargo': {'name': 'default', 'project': 'devops_autoabcgitlab', 'host': 'test.caicloudprivatetest.com'}, 'cacheDependencies': {}, 'workerQuota': {}, 'creationTime': '2019-02-20T17:58:56+08:00', 'lastUpdateTime': '2019-02-20T17:58:56+08:00'}]}</msg>
<status status="PASS" starttime="20190220 17:59:07.468" endtime="20190220 17:59:07.469"></status>
</kw>
<status status="PASS" starttime="20190220 17:59:07.260" endtime="20190220 17:59:07.470"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>devops_创建pipeline</arg>
</arguments>
<msg timestamp="20190220 17:59:07.472" level="INFO">devops_创建pipeline</msg>
<status status="PASS" starttime="20190220 17:59:07.471" endtime="20190220 17:59:07.472"></status>
</kw>
<kw name="devops_创建pipeline_push" library="devopsAPI业务关键词">
<arguments>
<arg>gitlab</arg>
<arg>golang</arg>
<arg>${workspaceName_gitlab}</arg>
<arg>${pipelineName_github}</arg>
<arg>tag</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=Basic YWRtaW46UHdkMTIzNDU2</arg>
<arg>X-Tenant=${namespace}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20190220 17:59:07.475" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'Basic YWRtaW46UHdkMTIzNDU2', 'X-Tenant': 'devops'}</msg>
<status status="PASS" starttime="20190220 17:59:07.474" endtime="20190220 17:59:07.476"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>compass</arg>
<arg>http://${compass_ip}:${api_port}/apis/admin.devops.caicloud.io</arg>
<arg>${header}</arg>
</arguments>
<msg timestamp="20190220 17:59:07.477" level="INFO">Creating Session using : alias=compass, url=http://192.168.129.130:6002/apis/admin.devops.caicloud.io, headers={'Content-Type': 'application/json', 'Authorization': 'Basic YWRtaW46UHdkMTIzNDU2', 'X-Tenant': 'devops'},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20190220 17:59:07.476" endtime="20190220 17:59:07.478"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the</doc>
<arguments>
<arg>compass</arg>
<arg>v1/workspaces/${workspace}/pipelines</arg>
<arg>data=${pipelineJSON_${repo_type}_${codeSource}_${pushMethod}}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190220 17:59:08.432" level="INFO">Post Request using : alias=compass, uri=v1/workspaces/autoabcgitlab/pipelines, data={"name":"autoabcgitlab","alias":"autoabcgitlab","description":"","autoTrigger":{"scmTrigger":{"tagRelease":{"stages":["codeCheckout","package","imageBuild","imageRelease"]}}},"build":{"buildInfo":{"buildTool":{},"cacheDependency":false},"builderImage":{"image":"test.caicloudprivatetest.com/library/golang:1.9.5-alpine3.7"},"stages":{"codeCheckout":{"mainRepo":{"type":"Gitlab","gitlab":{"ref":"refs/heads/master","url":"http://192.168.130.29:81/peter/golangtest.git"}}},"package":{"command":["cd helloworld\nCGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build"]},"imageBuild":{"buildInfos":[{"contextDir":".","dockerfile":"","dockerfilePath":"Dockerfile","taskName":"imageBuild-be1rt","mark":"imageBuild-be1rt","imageName":"abcd"}]},"imageRelease":{"releasePolicies":[{"imageName":"abcd","type":"Always"}]}}}}, headers={'Content-Type': 'application/json', 'Authorization': 'Basic YWRtaW46UHdkMTIzNDU2', 'X-Tenant': 'devops'}, files=None, allow_redirects=True </msg>
<msg timestamp="20190220 17:59:08.433" level="INFO">${resp} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20190220 17:59:07.478" endtime="20190220 17:59:08.433"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20190220 17:59:08.435" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20190220 17:59:08.434" endtime="20190220 17:59:08.436"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<assign>
<var>${content}</var>
</assign>
<msg timestamp="20190220 17:59:08.438" level="INFO">${content} = {'id': '5c6d24e1bdcb2f00015824ad', 'name': 'autoabcgitlab', 'alias': 'autoabcgitlab', 'owner': 'admin', 'projectID': '5c6d24e0bdcb2f00015824ac', 'build': {'buildInfo': {'buildTool': {}}, 'builderImage...</msg>
<status status="PASS" starttime="20190220 17:59:08.436" endtime="20190220 17:59:08.438"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${content}</arg>
</arguments>
<msg timestamp="20190220 17:59:08.442" level="INFO">{'id': '5c6d24e1bdcb2f00015824ad', 'name': 'autoabcgitlab', 'alias': 'autoabcgitlab', 'owner': 'admin', 'projectID': '5c6d24e0bdcb2f00015824ac', 'build': {'buildInfo': {'buildTool': {}}, 'builderImage': {'image': 'test.caicloudprivatetest.com/library/golang:1.9.5-alpine3.7'}, 'stages': {'codeCheckout': {'mainRepo': {'type': 'Gitlab', 'gitlab': {'url': 'http://192.168.130.29:81/peter/golangtest.git', 'ref': 'refs/heads/master'}}}, 'package': {'command': ['cd helloworld\nCGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build']}, 'imageBuild': {'buildInfos': [{'taskName': 'imageBuild-be1rt', 'contextDir': '.', 'dockerfilePath': 'Dockerfile', 'imageName': 'abcd'}]}, 'imageRelease': {'releasePolicies': [{'imageName': 'abcd', 'type': 'Always'}]}}}, 'autoTrigger': {'scmTrigger': {'tagRelease': {'stages': ['codeCheckout', 'package', 'imageBuild', 'imageRelease']}, 'webhook': 'http://192.168.129.130:6060/hodor/apis/admin.devops.caicloud.io/v1/pipelines/5c6d24e1bdcb2f00015824ad/gitlabwebhook'}}, 'creationTime': '2019-02-20T17:58:58.136441034+08:00', 'lastUpdateTime': '2019-02-20T17:58:58.136441242+08:00', 'annotations': {'tenant': 'devops'}}</msg>
<status status="PASS" starttime="20190220 17:59:08.439" endtime="20190220 17:59:08.442"></status>
</kw>
<status status="PASS" starttime="20190220 17:59:07.473" endtime="20190220 17:59:08.443"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>devops_获取pipeline</arg>
</arguments>
<msg timestamp="20190220 17:59:08.445" level="INFO">devops_获取pipeline</msg>
<status status="PASS" starttime="20190220 17:59:08.444" endtime="20190220 17:59:08.445"></status>
</kw>
<kw name="devops_获取pipeline" library="devopsAPI业务关键词">
<arguments>
<arg>gitlab</arg>
<arg>golang</arg>
<arg>${workspaceName_gitlab}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=Basic YWRtaW46UHdkMTIzNDU2</arg>
<arg>X-Tenant=${namespace}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20190220 17:59:08.448" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'Basic YWRtaW46UHdkMTIzNDU2', 'X-Tenant': 'devops'}</msg>
<status status="PASS" starttime="20190220 17:59:08.447" endtime="20190220 17:59:08.449"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>compass</arg>
<arg>http://${compass_ip}:${api_port}/apis/admin.devops.caicloud.io</arg>
<arg>${header}</arg>
</arguments>
<msg timestamp="20190220 17:59:08.450" level="INFO">Creating Session using : alias=compass, url=http://192.168.129.130:6002/apis/admin.devops.caicloud.io, headers={'Content-Type': 'application/json', 'Authorization': 'Basic YWRtaW46UHdkMTIzNDU2', 'X-Tenant': 'devops'},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20190220 17:59:08.449" endtime="20190220 17:59:08.451"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the</doc>
<arguments>
<arg>compass</arg>
<arg>v1/workspaces/${workspace}/pipelines</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190220 17:59:08.722" level="INFO">Get Request using : alias=compass, uri=v1/workspaces/autoabcgitlab/pipelines, headers={'Content-Type': 'application/json', 'Authorization': 'Basic YWRtaW46UHdkMTIzNDU2', 'X-Tenant': 'devops'} json=None</msg>
<msg timestamp="20190220 17:59:08.723" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190220 17:59:08.451" endtime="20190220 17:59:08.723"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20190220 17:59:08.725" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20190220 17:59:08.724" endtime="20190220 17:59:08.726"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<assign>
<var>${content}</var>
</assign>
<msg timestamp="20190220 17:59:08.729" level="INFO">${content} = {'metadata': {'total': 1}, 'items': [{'id': '5c6d24e1bdcb2f00015824ad', 'name': 'autoabcgitlab', 'alias': 'autoabcgitlab', 'owner': 'admin', 'projectID': '5c6d24e0bdcb2f00015824ac', 'build': {'buildIn...</msg>
<status status="PASS" starttime="20190220 17:59:08.727" endtime="20190220 17:59:08.729"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${content}</arg>
</arguments>
<msg timestamp="20190220 17:59:08.731" level="INFO">{'metadata': {'total': 1}, 'items': [{'id': '5c6d24e1bdcb2f00015824ad', 'name': 'autoabcgitlab', 'alias': 'autoabcgitlab', 'owner': 'admin', 'projectID': '5c6d24e0bdcb2f00015824ac', 'build': {'buildInfo': {'buildTool': {}}, 'builderImage': {'image': 'test.caicloudprivatetest.com/library/golang:1.9.5-alpine3.7'}, 'stages': {'codeCheckout': {'mainRepo': {'type': 'Gitlab', 'gitlab': {'url': 'http://192.168.130.29:81/peter/golangtest.git', 'ref': 'refs/heads/master'}}}, 'package': {'command': ['cd helloworld\nCGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build']}, 'imageBuild': {'buildInfos': [{'taskName': 'imageBuild-be1rt', 'contextDir': '.', 'dockerfilePath': 'Dockerfile', 'imageName': 'abcd'}]}, 'imageRelease': {'releasePolicies': [{'imageName': 'abcd', 'type': 'Always'}]}}}, 'autoTrigger': {'scmTrigger': {'tagRelease': {'stages': ['codeCheckout', 'package', 'imageBuild', 'imageRelease']}, 'webhook': 'http://192.168.129.130:6060/hodor/apis/admin.devops.caicloud.io/v1/pipelines/5c6d24e1bdcb2f00015824ad/gitlabwebhook'}}, 'creationTime': '2019-02-20T17:58:58.136+08:00', 'lastUpdateTime': '2019-02-20T17:58:58.136+08:00', 'annotations': {'tenant': 'devops'}}]}</msg>
<status status="PASS" starttime="20190220 17:59:08.730" endtime="20190220 17:59:08.732"></status>
</kw>
<status status="PASS" starttime="20190220 17:59:08.446" endtime="20190220 17:59:08.732"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>gitlab添加tag</arg>
</arguments>
<msg timestamp="20190220 17:59:08.733" level="INFO">gitlab添加tag</msg>
<status status="PASS" starttime="20190220 17:59:08.733" endtime="20190220 17:59:08.734"></status>
</kw>
<kw name="devops_gitlabpush_tag" library="devopsAPI业务关键词">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>8</arg>
<arg>[LETTERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20190220 17:59:08.735" level="INFO">${random} = rXwvvHnF</msg>
<status status="PASS" starttime="20190220 17:59:08.735" endtime="20190220 17:59:08.736"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>private_token=${gitlab_token}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20190220 17:59:08.737" level="INFO">${header} = {'private_token': 'Hr9qf-Uzx_Rj62movs_x'}</msg>
<status status="PASS" starttime="20190220 17:59:08.736" endtime="20190220 17:59:08.737"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>gitlab</arg>
<arg>http://${gitlabaddress}/api/v4</arg>
<arg>${header}</arg>
</arguments>
<msg timestamp="20190220 17:59:08.738" level="INFO">Creating Session using : alias=gitlab, url=http://192.168.130.29:81/api/v4, headers={'private_token': 'Hr9qf-Uzx_Rj62movs_x'},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20190220 17:59:08.737" endtime="20190220 17:59:08.738"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the</doc>
<arguments>
<arg>gitlab</arg>
<arg>projects/${projectID}/repository/tags?tag_name=auto${random}&amp;ref=master&amp;private_token=${gitlab_token}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190220 17:59:10.114" level="INFO">Post Request using : alias=gitlab, uri=projects/2/repository/tags?tag_name=autorXwvvHnF&amp;ref=master&amp;private_token=Hr9qf-Uzx_Rj62movs_x, data=&lt;empty&gt;, headers=None, files=None, allow_redirects=True </msg>
<msg timestamp="20190220 17:59:10.114" level="INFO">${resp} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20190220 17:59:08.738" endtime="20190220 17:59:10.114"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20190220 17:59:10.117" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20190220 17:59:10.115" endtime="20190220 17:59:10.117"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<assign>
<var>${content}</var>
</assign>
<msg timestamp="20190220 17:59:10.120" level="INFO">${content} = {'name': 'autorXwvvHnF', 'message': '', 'target': 'b9c5b9c6c23e436a3ef6f1dd3e7b6e507975aea0', 'commit': {'id': 'b9c5b9c6c23e436a3ef6f1dd3e7b6e507975aea0', 'short_id': 'b9c5b9c6', 'title': 'new', 'crea...</msg>
<status status="PASS" starttime="20190220 17:59:10.118" endtime="20190220 17:59:10.120"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${content}</arg>
</arguments>
<msg timestamp="20190220 17:59:10.122" level="INFO">{'name': 'autorXwvvHnF', 'message': '', 'target': 'b9c5b9c6c23e436a3ef6f1dd3e7b6e507975aea0', 'commit': {'id': 'b9c5b9c6c23e436a3ef6f1dd3e7b6e507975aea0', 'short_id': 'b9c5b9c6', 'title': 'new', 'created_at': '2019-01-22T09:10:19.000Z', 'parent_ids': [], 'message': 'new\n', 'author_name': 'peter', 'author_email': 'heliping@caicloud.io', 'authored_date': '2019-01-22T09:10:19.000Z', 'committer_name': 'peter', 'committer_email': 'heliping@caicloud.io', 'committed_date': '2019-01-22T09:10:19.000Z'}, 'release': None}</msg>
<status status="PASS" starttime="20190220 17:59:10.121" endtime="20190220 17:59:10.122"></status>
</kw>
<status status="PASS" starttime="20190220 17:59:08.734" endtime="20190220 17:59:10.122"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>等待devops_pipeline执行结果</arg>
</arguments>
<msg timestamp="20190220 17:59:10.124" level="INFO">等待devops_pipeline执行结果</msg>
<status status="PASS" starttime="20190220 17:59:10.123" endtime="20190220 17:59:10.124"></status>
</kw>
<kw name="devops_pipeline执行结果_流水线执行完毕" library="devopsAPI业务关键词">
<arguments>
<arg>gitlab</arg>
<arg>${workspaceName_gitlab}</arg>
<arg>${pipelineName_gitlab}</arg>
</arguments>
<assign>
<var>${return}</var>
</assign>
<kw name="${i} IN RANGE [ 100 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>60</arg>
</arguments>
<msg timestamp="20190220 18:00:10.129" level="INFO">Slept 1 minute</msg>
<status status="PASS" starttime="20190220 17:59:10.128" endtime="20190220 18:00:10.129"></status>
</kw>
<kw name="devops_pipeline执行结果" library="devopsAPI业务关键词">
<arguments>
<arg>${repo_type}</arg>
<arg>${workspace}</arg>
<arg>${pipeline}</arg>
</arguments>
<assign>
<var>${return}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=Basic YWRtaW46UHdkMTIzNDU2</arg>
<arg>X-Tenant=${namespace}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20190220 18:00:10.133" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'Basic YWRtaW46UHdkMTIzNDU2', 'X-Tenant': 'devops'}</msg>
<status status="PASS" starttime="20190220 18:00:10.132" endtime="20190220 18:00:10.134"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>compass</arg>
<arg>http://${compass_ip}:${api_port}/apis/admin.devops.caicloud.io</arg>
<arg>${header}</arg>
</arguments>
<msg timestamp="20190220 18:00:10.135" level="INFO">Creating Session using : alias=compass, url=http://192.168.129.130:6002/apis/admin.devops.caicloud.io, headers={'Content-Type': 'application/json', 'Authorization': 'Basic YWRtaW46UHdkMTIzNDU2', 'X-Tenant': 'devops'},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20190220 18:00:10.134" endtime="20190220 18:00:10.135"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the</doc>
<arguments>
<arg>compass</arg>
<arg>v1/workspaces/${workspace}/pipelines/${pipeline}/records</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190220 18:00:10.647" level="INFO">Get Request using : alias=compass, uri=v1/workspaces/autoabcgitlab/pipelines/autoabcgitlab/records, headers={'Content-Type': 'application/json', 'Authorization': 'Basic YWRtaW46UHdkMTIzNDU2', 'X-Tenant': 'devops'} json=None</msg>
<msg timestamp="20190220 18:00:10.647" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190220 18:00:10.135" endtime="20190220 18:00:10.648"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20190220 18:00:10.652" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20190220 18:00:10.649" endtime="20190220 18:00:10.652"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<assign>
<var>${content}</var>
</assign>
<msg timestamp="20190220 18:00:10.655" level="INFO">${content} = {'metadata': {'total': 1}, 'items': [{'id': '5c6d24e4bdcb2f00015824ae', 'name': 'autorXwvvHnF', 'pipelineID': '5c6d24e1bdcb2f00015824ad', 'trigger': 'webhook-tag-release', 'performParams': {'ref': 're...</msg>
<status status="PASS" starttime="20190220 18:00:10.653" endtime="20190220 18:00:10.655"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${content['items'][0]['status']}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20190220 18:00:10.657" level="INFO">${result} = Success</msg>
<status status="PASS" starttime="20190220 18:00:10.656" endtime="20190220 18:00:10.658"></status>
</kw>
<msg timestamp="20190220 18:00:10.659" level="INFO">${return} = Success</msg>
<status status="PASS" starttime="20190220 18:00:10.130" endtime="20190220 18:00:10.659"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${return}'=='Success'</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20190220 18:00:10.661" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20190220 18:00:10.661" endtime="20190220 18:00:10.662"></status>
</kw>
<status status="PASS" starttime="20190220 18:00:10.660" endtime="20190220 18:00:10.662"></status>
</kw>
<status status="PASS" starttime="20190220 17:59:10.127" endtime="20190220 18:00:10.662"></status>
</kw>
<status status="PASS" starttime="20190220 17:59:10.127" endtime="20190220 18:00:10.663"></status>
</kw>
<msg timestamp="20190220 18:00:10.664" level="INFO">${return} = Success</msg>
<status status="PASS" starttime="20190220 17:59:10.125" endtime="20190220 18:00:10.665"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>断言执行结果为success</arg>
</arguments>
<msg timestamp="20190220 18:00:10.667" level="INFO">断言执行结果为success</msg>
<status status="PASS" starttime="20190220 18:00:10.666" endtime="20190220 18:00:10.667"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Be Equal As Strings</arg>
<arg>'${return}'</arg>
<arg>'Success'</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>'${return}'</arg>
<arg>'Success'</arg>
</arguments>
<status status="PASS" starttime="20190220 18:00:10.668" endtime="20190220 18:00:10.668"></status>
</kw>
<status status="PASS" starttime="20190220 18:00:10.667" endtime="20190220 18:00:10.669"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>devops_获取pipeline执行记录</arg>
</arguments>
<msg timestamp="20190220 18:00:10.669" level="INFO">devops_获取pipeline执行记录</msg>
<status status="PASS" starttime="20190220 18:00:10.669" endtime="20190220 18:00:10.670"></status>
</kw>
<kw name="devops_获取pipeline执行记录" library="devopsAPI业务关键词">
<arguments>
<arg>gitlab</arg>
<arg>${workspaceName_gitlab}</arg>
<arg>${pipelineName_gitlab}</arg>
</arguments>
<assign>
<var>${pipeline_id}</var>
<var>${task_name}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=Basic YWRtaW46UHdkMTIzNDU2</arg>
<arg>X-Tenant=${namespace}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20190220 18:00:10.671" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'Basic YWRtaW46UHdkMTIzNDU2', 'X-Tenant': 'devops'}</msg>
<status status="PASS" starttime="20190220 18:00:10.671" endtime="20190220 18:00:10.672"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>compass</arg>
<arg>http://${compass_ip}:${api_port}/apis/admin.devops.caicloud.io</arg>
<arg>${header}</arg>
</arguments>
<msg timestamp="20190220 18:00:10.672" level="INFO">Creating Session using : alias=compass, url=http://192.168.129.130:6002/apis/admin.devops.caicloud.io, headers={'Content-Type': 'application/json', 'Authorization': 'Basic YWRtaW46UHdkMTIzNDU2', 'X-Tenant': 'devops'},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20190220 18:00:10.672" endtime="20190220 18:00:10.673"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the</doc>
<arguments>
<arg>compass</arg>
<arg>v1/workspaces/${workspace}/pipelines/${pipeline}/records</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190220 18:00:11.356" level="INFO">Get Request using : alias=compass, uri=v1/workspaces/autoabcgitlab/pipelines/autoabcgitlab/records, headers={'Content-Type': 'application/json', 'Authorization': 'Basic YWRtaW46UHdkMTIzNDU2', 'X-Tenant': 'devops'} json=None</msg>
<msg timestamp="20190220 18:00:11.357" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190220 18:00:10.673" endtime="20190220 18:00:11.357"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20190220 18:00:11.358" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20190220 18:00:11.357" endtime="20190220 18:00:11.359"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<assign>
<var>${content}</var>
</assign>
<msg timestamp="20190220 18:00:11.360" level="INFO">${content} = {'metadata': {'total': 1}, 'items': [{'id': '5c6d24e4bdcb2f00015824ae', 'name': 'autorXwvvHnF', 'pipelineID': '5c6d24e1bdcb2f00015824ad', 'trigger': 'webhook-tag-release', 'performParams': {'ref': 're...</msg>
<status status="PASS" starttime="20190220 18:00:11.359" endtime="20190220 18:00:11.361"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${content['items'][0]['id']}</arg>
</arguments>
<assign>
<var>${pipeline_id}</var>
</assign>
<msg timestamp="20190220 18:00:11.362" level="INFO">${pipeline_id} = 5c6d24e4bdcb2f00015824ae</msg>
<status status="PASS" starttime="20190220 18:00:11.361" endtime="20190220 18:00:11.362"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${content['items'][0]['stageStatus']['imageBuild']['tasks'][0]['name']}</arg>
</arguments>
<assign>
<var>${task_name}</var>
</assign>
<msg timestamp="20190220 18:00:11.364" level="INFO">${task_name} = imageBuild-be1rt</msg>
<status status="PASS" starttime="20190220 18:00:11.363" endtime="20190220 18:00:11.364"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${pipeline_id}</arg>
</arguments>
<msg timestamp="20190220 18:00:11.365" level="INFO">5c6d24e4bdcb2f00015824ae</msg>
<status status="PASS" starttime="20190220 18:00:11.365" endtime="20190220 18:00:11.365"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${task_name}</arg>
</arguments>
<msg timestamp="20190220 18:00:11.366" level="INFO">imageBuild-be1rt</msg>
<status status="PASS" starttime="20190220 18:00:11.366" endtime="20190220 18:00:11.366"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${content}</arg>
</arguments>
<msg timestamp="20190220 18:00:11.367" level="INFO">{'metadata': {'total': 1}, 'items': [{'id': '5c6d24e4bdcb2f00015824ae', 'name': 'autorXwvvHnF', 'pipelineID': '5c6d24e1bdcb2f00015824ad', 'trigger': 'webhook-tag-release', 'performParams': {'ref': 'refs/tags/autorXwvvHnF', 'name': 'autorXwvvHnF', 'description': 'Triggered by tag release', 'stages': ['codeCheckout', 'package', 'imageBuild', 'imageRelease']}, 'stageStatus': {'codeCheckout': {'status': 'Success', 'startTime': '2019-02-20T17:59:11.476+08:00', 'endTime': '2019-02-20T17:59:11.767+08:00', 'commits': {'mainRepo': {'repoName': 'peter/golangtest', 'id': 'b9c5b9c6c23e436a3ef6f1dd3e7b6e507975aea0', 'author': 'peter', 'date': '2019-01-22T17:10:19+08:00', 'message': 'new'}}}, 'package': {'status': 'Success', 'startTime': '2019-02-20T17:59:11.771+08:00', 'endTime': '2019-02-20T17:59:23.965+08:00'}, 'imageBuild': {'status': 'Success', 'startTime': '2019-02-20T17:59:23.971+08:00', 'endTime': '2019-02-20T17:59:44.734+08:00', 'tasks': [{'name': 'imageBuild-be1rt', 'status': 'Success', 'startTime': '2019-02-20T17:59:23.971+08:00', 'endTime': '2019-02-20T17:59:44.734+08:00', 'image': 'test.caicloudprivatetest.com/devops_autoabcgitlab/abcd:autorXwvvHnF'}]}, 'imageRelease': {'status': 'Success', 'startTime': '2019-02-20T17:59:44.743+08:00', 'endTime': '2019-02-20T17:59:46.024+08:00', 'tasks': [{'name': 'test.caicloudprivatetest.com/devops_autoabcgitlab/abcd:autorXwvvHnF', 'status': 'Success', 'startTime': '2019-02-20T17:59:44.743+08:00', 'endTime': '2019-02-20T17:59:46.024+08:00', 'image': 'test.caicloudprivatetest.com/devops_autoabcgitlab/abcd:autorXwvvHnF'}]}}, 'status': 'Success', 'startTime': '2019-02-20T17:59:07.413+08:00', 'endTime': '2019-02-20T17:59:46.031+08:00'}]}</msg>
<status status="PASS" starttime="20190220 18:00:11.367" endtime="20190220 18:00:11.367"></status>
</kw>
<msg timestamp="20190220 18:00:11.368" level="INFO">${pipeline_id} = 5c6d24e4bdcb2f00015824ae</msg>
<msg timestamp="20190220 18:00:11.368" level="INFO">${task_name} = imageBuild-be1rt</msg>
<status status="PASS" starttime="20190220 18:00:10.670" endtime="20190220 18:00:11.368"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>devops_获取pipeline执行log</arg>
</arguments>
<msg timestamp="20190220 18:00:11.369" level="INFO">devops_获取pipeline执行log</msg>
<status status="PASS" starttime="20190220 18:00:11.369" endtime="20190220 18:00:11.370"></status>
</kw>
<kw name="devops_获取pipeline执行log" library="devopsAPI业务关键词">
<arguments>
<arg>${pipeline_id}</arg>
<arg>${task_name}</arg>
<arg>imageBuild</arg>
<arg>gitlab</arg>
<arg>${workspaceName_gitlab}</arg>
<arg>${pipelineName_gitlab}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=Basic YWRtaW46UHdkMTIzNDU2</arg>
<arg>X-Tenant=${namespace}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20190220 18:00:11.372" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'Basic YWRtaW46UHdkMTIzNDU2', 'X-Tenant': 'devops'}</msg>
<status status="PASS" starttime="20190220 18:00:11.371" endtime="20190220 18:00:11.372"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>compass</arg>
<arg>http://${compass_ip}:${api_port}/apis/admin.devops.caicloud.io</arg>
<arg>${header}</arg>
</arguments>
<msg timestamp="20190220 18:00:11.373" level="INFO">Creating Session using : alias=compass, url=http://192.168.129.130:6002/apis/admin.devops.caicloud.io, headers={'Content-Type': 'application/json', 'Authorization': 'Basic YWRtaW46UHdkMTIzNDU2', 'X-Tenant': 'devops'},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20190220 18:00:11.372" endtime="20190220 18:00:11.373"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the</doc>
<arguments>
<arg>compass</arg>
<arg>v1/workspaces/${workspace}/pipelines/${pipeline}/records/${pipeline_id}/logs?stage=${stage}&amp;task=${task_name}&amp;download=false</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190220 18:00:11.976" level="INFO">Get Request using : alias=compass, uri=v1/workspaces/autoabcgitlab/pipelines/autoabcgitlab/records/5c6d24e4bdcb2f00015824ae/logs?stage=imageBuild&amp;task=imageBuild-be1rt&amp;download=false, headers={'Content-Type': 'application/json', 'Authorization': 'Basic YWRtaW46UHdkMTIzNDU2', 'X-Tenant': 'devops'} json=None</msg>
<msg timestamp="20190220 18:00:11.977" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190220 18:00:11.374" endtime="20190220 18:00:11.977"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20190220 18:00:11.979" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20190220 18:00:11.978" endtime="20190220 18:00:11.979"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<msg timestamp="20190220 18:00:11.981" level="INFO">&lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190220 18:00:11.980" endtime="20190220 18:00:11.981"></status>
</kw>
<status status="PASS" starttime="20190220 18:00:11.370" endtime="20190220 18:00:11.982"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>删除流水线组</arg>
</arguments>
<msg timestamp="20190220 18:00:11.983" level="INFO">删除流水线组</msg>
<status status="PASS" starttime="20190220 18:00:11.982" endtime="20190220 18:00:11.984"></status>
</kw>
<kw name="devops_删除workspace" library="devopsAPI业务关键词">
<arguments>
<arg>gitlab</arg>
<arg>${workspaceName_gitlab}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=Basic YWRtaW46UHdkMTIzNDU2</arg>
<arg>X-Tenant=${namespace}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20190220 18:00:11.987" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'Basic YWRtaW46UHdkMTIzNDU2', 'X-Tenant': 'devops'}</msg>
<status status="PASS" starttime="20190220 18:00:11.985" endtime="20190220 18:00:11.987"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>compass</arg>
<arg>http://${compass_ip}:${api_port}/apis/admin.devops.caicloud.io</arg>
<arg>${header}</arg>
</arguments>
<msg timestamp="20190220 18:00:11.989" level="INFO">Creating Session using : alias=compass, url=http://192.168.129.130:6002/apis/admin.devops.caicloud.io, headers={'Content-Type': 'application/json', 'Authorization': 'Basic YWRtaW46UHdkMTIzNDU2', 'X-Tenant': 'devops'},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20190220 18:00:11.988" endtime="20190220 18:00:11.990"></status>
</kw>
<kw name="Delete Request" library="RequestsLibrary">
<doc>Send a DELETE request on the session object found using the</doc>
<arguments>
<arg>compass</arg>
<arg>/v1/workspaces/${workspace}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190220 18:00:12.986" level="INFO">Delete Request using : alias=compass, uri=/v1/workspaces/autoabcgitlab, data=[],                     headers={'Content-Type': 'application/json', 'Authorization': 'Basic YWRtaW46UHdkMTIzNDU2', 'X-Tenant': 'devops'}, allow_redirects=True </msg>
<msg timestamp="20190220 18:00:12.987" level="INFO">${resp} = &lt;Response [204]&gt;</msg>
<status status="PASS" starttime="20190220 18:00:11.990" endtime="20190220 18:00:12.987"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>204</arg>
</arguments>
<msg timestamp="20190220 18:00:12.990" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20190220 18:00:12.988" endtime="20190220 18:00:12.990"></status>
</kw>
<status status="PASS" starttime="20190220 18:00:11.984" endtime="20190220 18:00:12.991"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>devops_删除project</arg>
</arguments>
<msg timestamp="20190220 18:00:12.992" level="INFO">devops_删除project</msg>
<status status="PASS" starttime="20190220 18:00:12.991" endtime="20190220 18:00:12.992"></status>
</kw>
<kw name="devops_删除project" library="devopsAPI业务关键词">
<arguments>
<arg>${workspaceName_gitlab}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=Basic YWRtaW46UHdkMTIzNDU2</arg>
<arg>X-Tenant=${namespace}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20190220 18:00:12.996" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'Basic YWRtaW46UHdkMTIzNDU2', 'X-Tenant': 'devops'}</msg>
<status status="PASS" starttime="20190220 18:00:12.995" endtime="20190220 18:00:12.996"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>compass</arg>
<arg>http://${compass_ip}:${api_port}/apis/admin.cargo.caicloud.io</arg>
<arg>${header}</arg>
</arguments>
<msg timestamp="20190220 18:00:12.998" level="INFO">Creating Session using : alias=compass, url=http://192.168.129.130:6002/apis/admin.cargo.caicloud.io, headers={'Content-Type': 'application/json', 'Authorization': 'Basic YWRtaW46UHdkMTIzNDU2', 'X-Tenant': 'devops'},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20190220 18:00:12.997" endtime="20190220 18:00:13.000"></status>
</kw>
<kw name="Delete Request" library="RequestsLibrary">
<doc>Send a DELETE request on the session object found using the</doc>
<arguments>
<arg>compass</arg>
<arg>${url}/${registryName}/projects/${namespace}_${projectName_l}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190220 18:00:13.378" level="INFO">Delete Request using : alias=compass, uri=/v2/registries/default/projects/devops_autoabcgitlab, data=[],                     headers={'Content-Type': 'application/json', 'Authorization': 'Basic YWRtaW46UHdkMTIzNDU2', 'X-Tenant': 'devops'}, allow_redirects=True </msg>
<msg timestamp="20190220 18:00:13.379" level="INFO">${resp} = &lt;Response [204]&gt;</msg>
<status status="PASS" starttime="20190220 18:00:13.001" endtime="20190220 18:00:13.379"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>204</arg>
</arguments>
<msg timestamp="20190220 18:00:13.380" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20190220 18:00:13.379" endtime="20190220 18:00:13.381"></status>
</kw>
<status status="PASS" starttime="20190220 18:00:12.993" endtime="20190220 18:00:13.381"></status>
</kw>
<status status="PASS" starttime="20190220 17:59:06.228" endtime="20190220 18:00:13.382" critical="yes"></status>
</test>
<status status="FAIL" starttime="20190220 17:55:54.649" endtime="20190220 18:00:13.385"></status>
</suite>
<status status="FAIL" starttime="20190220 17:55:54.645" endtime="20190220 18:00:13.394"></status>
</suite>
<status status="FAIL" starttime="20190220 17:55:54.640" endtime="20190220 18:00:13.399"></status>
</suite>
<status status="FAIL" starttime="20190220 17:55:54.611" endtime="20190220 18:00:13.404"></status>
</suite>
<statistics>
<total>
<stat pass="3" fail="1">Critical Tests</stat>
<stat pass="3" fail="1">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="3" fail="1" id="s1" name="Devops">Devops</stat>
<stat pass="3" fail="1" id="s1-s1" name="测试用例">Devops.测试用例</stat>
<stat pass="3" fail="1" id="s1-s1-s1" name="API">Devops.测试用例.API</stat>
<stat pass="3" fail="1" id="s1-s1-s1-s1" name="devopsAPI">Devops.测试用例.API.devopsAPI</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
