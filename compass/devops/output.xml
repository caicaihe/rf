<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.0.4 (Python 3.7.0 on darwin)" generated="20181102 14:53:33.757">
<suite id="s1" name="Devops" source="/Users/peter/mysource/mygithub/rf/compass/devops">
<suite id="s1-s1" name="测试用例" source="/Users/peter/mysource/mygithub/rf/compass/devops/测试用例">
<suite id="s1-s1-s1" name="API" source="/Users/peter/mysource/mygithub/rf/compass/devops/测试用例/API">
<suite id="s1-s1-s1-s1" name="API" source="/Users/peter/mysource/mygithub/rf/compass/devops/测试用例/API/API.txt">
<test id="s1-s1-s1-s1-t1" name="devops_持续交付_gitlab_golang流水线">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>devops_创建workspace</arg>
</arguments>
<msg timestamp="20181102 14:53:34.137" level="INFO">devops_创建workspace</msg>
<status status="PASS" starttime="20181102 14:53:34.137" endtime="20181102 14:53:34.138"></status>
</kw>
<kw name="devops_创建workspace" library="devopsAPI业务关键词">
<arguments>
<arg>gitlab</arg>
</arguments>
<kw name="github流水线获取token" library="devopsAPI基础关键词">
<assign>
<var>${githubjson_token}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>base64.b64decode('${github_token}')</arg>
<arg>modules=base64</arg>
</arguments>
<assign>
<var>${kk}</var>
</assign>
<msg timestamp="20181102 14:53:34.140" level="INFO">${kk} = df04215030787fdb06d9517cd7f698260df933ea</msg>
<status status="PASS" starttime="20181102 14:53:34.139" endtime="20181102 14:53:34.140"></status>
</kw>
<kw name="Decode Bytes To String" library="String">
<doc>Decodes the given ``bytes`` to a Unicode string using the given ``encoding``.</doc>
<arguments>
<arg>${kk}</arg>
<arg>UTF-8</arg>
</arguments>
<assign>
<var>${kkstr}</var>
</assign>
<msg timestamp="20181102 14:53:34.141" level="INFO">${kkstr} = df04215030787fdb06d9517cd7f698260df933ea</msg>
<status status="PASS" starttime="20181102 14:53:34.141" endtime="20181102 14:53:34.141"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${kk}</arg>
</arguments>
<msg timestamp="20181102 14:53:34.142" level="INFO">df04215030787fdb06d9517cd7f698260df933ea</msg>
<status status="PASS" starttime="20181102 14:53:34.141" endtime="20181102 14:53:34.142"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${workspaceJSON_github}</arg>
</arguments>
<assign>
<var>${github_decode_token}</var>
</assign>
<msg timestamp="20181102 14:53:34.143" level="INFO">${github_decode_token} = {'scm': {'type': 'Github', 'authType': 'Token', 'username': ' ', 'server': 'https://github.com', 'token': 'ZGYwNDIxNTAzMDc4N2ZkYjA2ZDk1MTdjZDdmNjk4MjYwZGY5MzNlYQ=='}, 'cargo': {'projectType': 'default...</msg>
<status status="PASS" starttime="20181102 14:53:34.142" endtime="20181102 14:53:34.143"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${github_decode_token['scm']}</arg>
<arg>token=${kkstr}</arg>
</arguments>
<status status="PASS" starttime="20181102 14:53:34.143" endtime="20181102 14:53:34.144"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${github_decode_token['scm']['token']}</arg>
</arguments>
<msg timestamp="20181102 14:53:34.145" level="INFO">df04215030787fdb06d9517cd7f698260df933ea</msg>
<status status="PASS" starttime="20181102 14:53:34.144" endtime="20181102 14:53:34.145"></status>
</kw>
<msg timestamp="20181102 14:53:34.145" level="INFO">${githubjson_token} = {'scm': {'type': 'Github', 'authType': 'Token', 'username': ' ', 'server': 'https://github.com', 'token': 'df04215030787fdb06d9517cd7f698260df933ea'}, 'cargo': {'projectType': 'default', 'name': 'defa...</msg>
<status status="PASS" starttime="20181102 14:53:34.139" endtime="20181102 14:53:34.145"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${repo_type}'=='gitlab'</arg>
<arg>Set Variable</arg>
<arg>${workspaceJson_gitlab}</arg>
<arg>ELSE IF</arg>
<arg>'${repo_type}'=='github'</arg>
<arg>Set Variable</arg>
<arg>${githubjson_token}</arg>
</arguments>
<assign>
<var>${workspaceJson}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${workspaceJson_gitlab}</arg>
</arguments>
<status status="PASS" starttime="20181102 14:53:34.146" endtime="20181102 14:53:34.147"></status>
</kw>
<msg timestamp="20181102 14:53:34.147" level="INFO">${workspaceJson} = {"scm":{"type":"Gitlab","authType":"Password","username":"peter","server":"http://192.168.21.100:10081","password":"1Xiaowanzi"},"cargo":{"projectType":"default","name":"default"},"workerQuota":{"cpuR...</msg>
<status status="PASS" starttime="20181102 14:53:34.146" endtime="20181102 14:53:34.148"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${workspaceJson}</arg>
</arguments>
<msg timestamp="20181102 14:53:34.148" level="INFO">{"scm":{"type":"Gitlab","authType":"Password","username":"peter","server":"http://192.168.21.100:10081","password":"1Xiaowanzi"},"cargo":{"projectType":"default","name":"default"},"workerQuota":{"cpuRequests":"0.5","cpuLimits":"1","memoryRequests":"1Gi","memoryLimits":"2Gi"},"alias":"abcgitlab"}</msg>
<status status="PASS" starttime="20181102 14:53:34.148" endtime="20181102 14:53:34.148"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=Basic YWRtaW46UHdkMTIzNDU2</arg>
<arg>X-Tenant=${namespace}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20181102 14:53:34.150" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'Basic YWRtaW46UHdkMTIzNDU2', 'X-Tenant': 'godevops'}</msg>
<status status="PASS" starttime="20181102 14:53:34.149" endtime="20181102 14:53:34.150"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>compass</arg>
<arg>http://${compass_ip}:${api_port}/apis/admin.devops.caicloud.io</arg>
<arg>${header}</arg>
</arguments>
<msg timestamp="20181102 14:53:34.151" level="INFO">Creating Session using : alias=compass, url=http://192.168.129.30:6002/apis/admin.devops.caicloud.io, headers={'Content-Type': 'application/json', 'Authorization': 'Basic YWRtaW46UHdkMTIzNDU2', 'X-Tenant': 'godevops'},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20181102 14:53:34.150" endtime="20181102 14:53:34.152"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the</doc>
<arguments>
<arg>compass</arg>
<arg>/v1/workspaces</arg>
<arg>data=${workspaceJson}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20181102 14:53:35.846" level="INFO">Post Request using : alias=compass, uri=/v1/workspaces, data={"scm":{"type":"Gitlab","authType":"Password","username":"peter","server":"http://192.168.21.100:10081","password":"1Xiaowanzi"},"cargo":{"projectType":"default","name":"default"},"workerQuota":{"cpuRequests":"0.5","cpuLimits":"1","memoryRequests":"1Gi","memoryLimits":"2Gi"},"alias":"abcgitlab"}, headers={'Content-Type': 'application/json', 'Authorization': 'Basic YWRtaW46UHdkMTIzNDU2', 'X-Tenant': 'godevops'}, files=None, allow_redirects=True </msg>
<msg timestamp="20181102 14:53:35.846" level="INFO">${resp} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20181102 14:53:34.152" endtime="20181102 14:53:35.847"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20181102 14:53:35.849" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20181102 14:53:35.848" endtime="20181102 14:53:35.850"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<assign>
<var>${content}</var>
</assign>
<msg timestamp="20181102 14:53:35.852" level="INFO">${content} = {'name': 'abcgitlab', 'alias': 'abcgitlab', 'description': '', 'owner': 'admin', 'scm': {'type': 'Gitlab', 'authType': 'Password', 'server': 'http://192.168.21.100:10081', 'username': 'peter', 'token'...</msg>
<status status="PASS" starttime="20181102 14:53:35.851" endtime="20181102 14:53:35.853"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${content}</arg>
</arguments>
<msg timestamp="20181102 14:53:35.855" level="INFO">{'name': 'abcgitlab', 'alias': 'abcgitlab', 'description': '', 'owner': 'admin', 'scm': {'type': 'Gitlab', 'authType': 'Password', 'server': 'http://192.168.21.100:10081', 'username': 'peter', 'token': '7u9/1llUD9i5YVgzcb+F3xAnG+3fNO+hl4h5Nr6sde2GyR6qKolWT1ADaAeWpfQtf+h1H6wzBJpWR0HIPWYPw+lO8U9wP+yzAGe4oNtVKQ8='}, 'pipelineCount': 0, 'cargo': {'name': 'default', 'project': 'godevops_abcgitlab', 'host': 'cargo-regression-a.caicloudprivatetest.com'}, 'cacheDependencies': None, 'workerQuota': {}, 'creationTime': '2018-11-02T14:53:27+08:00', 'lastUpdateTime': '2018-11-02T14:53:27+08:00'}</msg>
<status status="PASS" starttime="20181102 14:53:35.854" endtime="20181102 14:53:35.856"></status>
</kw>
<status status="PASS" starttime="20181102 14:53:34.138" endtime="20181102 14:53:35.857"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>devops_创建pipeline</arg>
</arguments>
<msg timestamp="20181102 14:53:35.859" level="INFO">devops_创建pipeline</msg>
<status status="PASS" starttime="20181102 14:53:35.858" endtime="20181102 14:53:35.859"></status>
</kw>
<kw name="devops_创建pipeline" library="devopsAPI业务关键词">
<arguments>
<arg>gitlab</arg>
<arg>golang</arg>
<arg>${workspaceName_gitlab}</arg>
<arg>${pipelineName_github}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=Basic YWRtaW46UHdkMTIzNDU2</arg>
<arg>X-Tenant=${namespace}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20181102 14:53:35.862" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'Basic YWRtaW46UHdkMTIzNDU2', 'X-Tenant': 'godevops'}</msg>
<status status="PASS" starttime="20181102 14:53:35.861" endtime="20181102 14:53:35.862"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>compass</arg>
<arg>http://${compass_ip}:${api_port}/apis/admin.devops.caicloud.io</arg>
<arg>${header}</arg>
</arguments>
<msg timestamp="20181102 14:53:35.863" level="INFO">Creating Session using : alias=compass, url=http://192.168.129.30:6002/apis/admin.devops.caicloud.io, headers={'Content-Type': 'application/json', 'Authorization': 'Basic YWRtaW46UHdkMTIzNDU2', 'X-Tenant': 'godevops'},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20181102 14:53:35.862" endtime="20181102 14:53:35.864"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the</doc>
<arguments>
<arg>compass</arg>
<arg>v1/workspaces/${workspace}/pipelines</arg>
<arg>data=${pipelineJSON_${repo_type}_${codeSource}}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20181102 14:53:36.091" level="INFO">Post Request using : alias=compass, uri=v1/workspaces/abcgitlab/pipelines, data={"name":"abcgitlab","alias":"abcgitlab","description":"","build":{"buildInfo":{"buildTool":{},"cacheDependency":false},"builderImage":{"image":"cargo-regression-a.caicloudprivatetest.com/library/golang:1.9.5-alpine3.7"},"stages":{"codeCheckout":{"mainRepo":{"type":"Gitlab","gitlab":{"ref":"refs/heads/master","url":"http://192.168.21.100:10081/peter/golangtest.git"}}},"package":{"command":["cd helloworld\nCGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build"]},"imageBuild":{"buildInfos":[{"contextDir":".","dockerfile":"","dockerfilePath":"helloworld/Dockerfile","taskName":"imageBuild-be1rt","mark":"imageBuild-be1rt","imageName":"abcd"}]},"imageRelease":{"releasePolicies":[{"imageName":"abcd","type":"Always"}]}}}}, headers={'Content-Type': 'application/json', 'Authorization': 'Basic YWRtaW46UHdkMTIzNDU2', 'X-Tenant': 'godevops'}, files=None, allow_redirects=True </msg>
<msg timestamp="20181102 14:53:36.092" level="INFO">${resp} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20181102 14:53:35.864" endtime="20181102 14:53:36.092"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20181102 14:53:36.094" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20181102 14:53:36.093" endtime="20181102 14:53:36.094"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<assign>
<var>${content}</var>
</assign>
<msg timestamp="20181102 14:53:36.096" level="INFO">${content} = {'id': '5bdbf46716da9c0001a6ca1b', 'name': 'abcgitlab', 'alias': 'abcgitlab', 'owner': 'admin', 'projectID': '5bdbf46716da9c0001a6ca1a', 'build': {'buildInfo': {'buildTool': {}}, 'builderImage': {'ima...</msg>
<status status="PASS" starttime="20181102 14:53:36.095" endtime="20181102 14:53:36.096"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${content}</arg>
</arguments>
<msg timestamp="20181102 14:53:36.098" level="INFO">{'id': '5bdbf46716da9c0001a6ca1b', 'name': 'abcgitlab', 'alias': 'abcgitlab', 'owner': 'admin', 'projectID': '5bdbf46716da9c0001a6ca1a', 'build': {'buildInfo': {'buildTool': {}}, 'builderImage': {'image': 'cargo-regression-a.caicloudprivatetest.com/library/golang:1.9.5-alpine3.7'}, 'stages': {'codeCheckout': {'mainRepo': {'type': 'Gitlab', 'gitlab': {'url': 'http://192.168.21.100:10081/peter/golangtest.git', 'ref': 'refs/heads/master'}}}, 'package': {'command': ['cd helloworld\nCGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build']}, 'imageBuild': {'buildInfos': [{'taskName': 'imageBuild-be1rt', 'contextDir': '.', 'dockerfilePath': 'helloworld/Dockerfile', 'imageName': 'abcd'}]}, 'imageRelease': {'releasePolicies': [{'imageName': 'abcd', 'type': 'Always'}]}}}, 'creationTime': '2018-11-02T14:53:27.9514444+08:00', 'lastUpdateTime': '2018-11-02T14:53:27.95144457+08:00', 'annotations': {'tenant': 'godevops'}}</msg>
<status status="PASS" starttime="20181102 14:53:36.097" endtime="20181102 14:53:36.099"></status>
</kw>
<status status="PASS" starttime="20181102 14:53:35.860" endtime="20181102 14:53:36.099"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>devops_执行pipeline</arg>
</arguments>
<msg timestamp="20181102 14:53:36.100" level="INFO">devops_执行pipeline</msg>
<status status="PASS" starttime="20181102 14:53:36.100" endtime="20181102 14:53:36.101"></status>
</kw>
<kw name="devops_执行pipeline" library="devopsAPI业务关键词">
<arguments>
<arg>gitlab</arg>
<arg>${workspaceName_gitlab}</arg>
<arg>${pipelineName_gitlab}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=Basic YWRtaW46UHdkMTIzNDU2</arg>
<arg>X-Tenant=${namespace}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20181102 14:53:36.104" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'Basic YWRtaW46UHdkMTIzNDU2', 'X-Tenant': 'godevops'}</msg>
<status status="PASS" starttime="20181102 14:53:36.103" endtime="20181102 14:53:36.104"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>compass</arg>
<arg>http://${compass_ip}:${api_port}/apis/admin.devops.caicloud.io</arg>
<arg>${header}</arg>
</arguments>
<msg timestamp="20181102 14:53:36.105" level="INFO">Creating Session using : alias=compass, url=http://192.168.129.30:6002/apis/admin.devops.caicloud.io, headers={'Content-Type': 'application/json', 'Authorization': 'Basic YWRtaW46UHdkMTIzNDU2', 'X-Tenant': 'godevops'},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20181102 14:53:36.105" endtime="20181102 14:53:36.106"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the</doc>
<arguments>
<arg>compass</arg>
<arg>v1/workspaces/${workspace}/pipelines/${pipeline}/records</arg>
<arg>data=${recordJSON_${repo_type}}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20181102 14:53:36.869" level="INFO">Post Request using : alias=compass, uri=v1/workspaces/abcgitlab/pipelines/abcgitlab/records, data={"stages":["codeCheckout","package","imageBuild","imageRelease"],"workspace":"abcgitlab","pipeline":"abcgitlab","codeRef":{"type":"refs/heads/","name":"master"},"ref":"refs/heads/master","repoName":"caicaihe/golang","repoType":"github","tagType":"default","cacheDependency":false}, headers={'Content-Type': 'application/json', 'Authorization': 'Basic YWRtaW46UHdkMTIzNDU2', 'X-Tenant': 'godevops'}, files=None, allow_redirects=True </msg>
<msg timestamp="20181102 14:53:36.869" level="INFO">${resp} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20181102 14:53:36.107" endtime="20181102 14:53:36.869"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20181102 14:53:36.871" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20181102 14:53:36.870" endtime="20181102 14:53:36.871"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<assign>
<var>${content}</var>
</assign>
<msg timestamp="20181102 14:53:36.872" level="INFO">${content} = {'id': '5bdbf46816da9c0001a6ca1c', 'pipelineID': '5bdbf46716da9c0001a6ca1b', 'trigger': 'admin', 'performParams': {'ref': 'refs/heads/master', 'stages': ['codeCheckout', 'package', 'imageBuild', 'imag...</msg>
<status status="PASS" starttime="20181102 14:53:36.871" endtime="20181102 14:53:36.872"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${content}</arg>
</arguments>
<msg timestamp="20181102 14:53:36.873" level="INFO">{'id': '5bdbf46816da9c0001a6ca1c', 'pipelineID': '5bdbf46716da9c0001a6ca1b', 'trigger': 'admin', 'performParams': {'ref': 'refs/heads/master', 'stages': ['codeCheckout', 'package', 'imageBuild', 'imageRelease']}, 'status': 'Pending', 'startTime': '2018-11-02T14:53:28.362270808+08:00', 'endTime': '0001-01-01T00:00:00Z'}</msg>
<status status="PASS" starttime="20181102 14:53:36.873" endtime="20181102 14:53:36.873"></status>
</kw>
<status status="PASS" starttime="20181102 14:53:36.101" endtime="20181102 14:53:36.873"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>devops_pipeline执行结果</arg>
</arguments>
<msg timestamp="20181102 14:53:36.874" level="INFO">devops_pipeline执行结果</msg>
<status status="PASS" starttime="20181102 14:53:36.874" endtime="20181102 14:53:36.874"></status>
</kw>
<kw name="devops_pipeline执行结果_流水线执行完毕" library="devopsAPI业务关键词">
<arguments>
<arg>gitlab</arg>
<arg>${workspaceName_gitlab}</arg>
<arg>${pipelineName_gitlab}</arg>
</arguments>
<assign>
<var>${return}</var>
</assign>
<kw name="${i} IN RANGE [ 100 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>60</arg>
</arguments>
<msg timestamp="20181102 14:54:36.878" level="INFO">Slept 1 minute</msg>
<status status="PASS" starttime="20181102 14:53:36.876" endtime="20181102 14:54:36.879"></status>
</kw>
<kw name="devops_pipeline执行结果" library="devopsAPI业务关键词">
<arguments>
<arg>${repo_type}</arg>
<arg>${workspace}</arg>
<arg>${pipeline}</arg>
</arguments>
<assign>
<var>${return}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=Basic YWRtaW46UHdkMTIzNDU2</arg>
<arg>X-Tenant=${namespace}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20181102 14:54:36.883" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'Basic YWRtaW46UHdkMTIzNDU2', 'X-Tenant': 'godevops'}</msg>
<status status="PASS" starttime="20181102 14:54:36.881" endtime="20181102 14:54:36.883"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>compass</arg>
<arg>http://${compass_ip}:${api_port}/apis/admin.devops.caicloud.io</arg>
<arg>${header}</arg>
</arguments>
<msg timestamp="20181102 14:54:36.885" level="INFO">Creating Session using : alias=compass, url=http://192.168.129.30:6002/apis/admin.devops.caicloud.io, headers={'Content-Type': 'application/json', 'Authorization': 'Basic YWRtaW46UHdkMTIzNDU2', 'X-Tenant': 'godevops'},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20181102 14:54:36.883" endtime="20181102 14:54:36.886"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the</doc>
<arguments>
<arg>compass</arg>
<arg>v1/workspaces/${workspace}/pipelines/${pipeline}/records</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20181102 14:54:37.178" level="INFO">Get Request using : alias=compass, uri=v1/workspaces/abcgitlab/pipelines/abcgitlab/records, headers={'Content-Type': 'application/json', 'Authorization': 'Basic YWRtaW46UHdkMTIzNDU2', 'X-Tenant': 'godevops'} json=None</msg>
<msg timestamp="20181102 14:54:37.178" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20181102 14:54:36.887" endtime="20181102 14:54:37.179"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20181102 14:54:37.181" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20181102 14:54:37.180" endtime="20181102 14:54:37.182"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<assign>
<var>${content}</var>
</assign>
<msg timestamp="20181102 14:54:37.185" level="INFO">${content} = {'metadata': {'total': 1}, 'items': [{'id': '5bdbf46816da9c0001a6ca1c', 'name': 'dcf36b7-181102145336', 'pipelineID': '5bdbf46716da9c0001a6ca1b', 'trigger': 'admin', 'performParams': {'ref': 'refs/hea...</msg>
<status status="PASS" starttime="20181102 14:54:37.183" endtime="20181102 14:54:37.185"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${content['items'][0]['status']}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20181102 14:54:37.187" level="INFO">${result} = Running</msg>
<status status="PASS" starttime="20181102 14:54:37.186" endtime="20181102 14:54:37.187"></status>
</kw>
<msg timestamp="20181102 14:54:37.188" level="INFO">${return} = Running</msg>
<status status="PASS" starttime="20181102 14:54:36.879" endtime="20181102 14:54:37.189"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${return}'=='Success'</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20181102 14:54:37.190" endtime="20181102 14:54:37.191"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${return}'=='Failed'</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20181102 14:54:37.192" endtime="20181102 14:54:37.193"></status>
</kw>
<status status="PASS" starttime="20181102 14:53:36.875" endtime="20181102 14:54:37.193"></status>
</kw>
<kw name="${i} = 1" type="foritem">
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>60</arg>
</arguments>
<msg timestamp="20181102 14:55:37.195" level="INFO">Slept 1 minute</msg>
<status status="PASS" starttime="20181102 14:54:37.194" endtime="20181102 14:55:37.196"></status>
</kw>
<kw name="devops_pipeline执行结果" library="devopsAPI业务关键词">
<arguments>
<arg>${repo_type}</arg>
<arg>${workspace}</arg>
<arg>${pipeline}</arg>
</arguments>
<assign>
<var>${return}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=Basic YWRtaW46UHdkMTIzNDU2</arg>
<arg>X-Tenant=${namespace}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20181102 14:55:37.198" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'Basic YWRtaW46UHdkMTIzNDU2', 'X-Tenant': 'godevops'}</msg>
<status status="PASS" starttime="20181102 14:55:37.198" endtime="20181102 14:55:37.198"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>compass</arg>
<arg>http://${compass_ip}:${api_port}/apis/admin.devops.caicloud.io</arg>
<arg>${header}</arg>
</arguments>
<msg timestamp="20181102 14:55:37.199" level="INFO">Creating Session using : alias=compass, url=http://192.168.129.30:6002/apis/admin.devops.caicloud.io, headers={'Content-Type': 'application/json', 'Authorization': 'Basic YWRtaW46UHdkMTIzNDU2', 'X-Tenant': 'godevops'},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20181102 14:55:37.199" endtime="20181102 14:55:37.200"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the</doc>
<arguments>
<arg>compass</arg>
<arg>v1/workspaces/${workspace}/pipelines/${pipeline}/records</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20181102 14:55:37.468" level="INFO">Get Request using : alias=compass, uri=v1/workspaces/abcgitlab/pipelines/abcgitlab/records, headers={'Content-Type': 'application/json', 'Authorization': 'Basic YWRtaW46UHdkMTIzNDU2', 'X-Tenant': 'godevops'} json=None</msg>
<msg timestamp="20181102 14:55:37.469" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20181102 14:55:37.200" endtime="20181102 14:55:37.470"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20181102 14:55:37.472" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20181102 14:55:37.470" endtime="20181102 14:55:37.472"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<assign>
<var>${content}</var>
</assign>
<msg timestamp="20181102 14:55:37.476" level="INFO">${content} = {'metadata': {'total': 1}, 'items': [{'id': '5bdbf46816da9c0001a6ca1c', 'name': 'dcf36b7-181102145336', 'pipelineID': '5bdbf46716da9c0001a6ca1b', 'trigger': 'admin', 'performParams': {'ref': 'refs/hea...</msg>
<status status="PASS" starttime="20181102 14:55:37.473" endtime="20181102 14:55:37.476"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${content['items'][0]['status']}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20181102 14:55:37.479" level="INFO">${result} = Success</msg>
<status status="PASS" starttime="20181102 14:55:37.477" endtime="20181102 14:55:37.479"></status>
</kw>
<msg timestamp="20181102 14:55:37.480" level="INFO">${return} = Success</msg>
<status status="PASS" starttime="20181102 14:55:37.197" endtime="20181102 14:55:37.480"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${return}'=='Success'</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20181102 14:55:37.482" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20181102 14:55:37.482" endtime="20181102 14:55:37.483"></status>
</kw>
<status status="PASS" starttime="20181102 14:55:37.481" endtime="20181102 14:55:37.484"></status>
</kw>
<status status="PASS" starttime="20181102 14:54:37.194" endtime="20181102 14:55:37.484"></status>
</kw>
<status status="PASS" starttime="20181102 14:53:36.875" endtime="20181102 14:55:37.485"></status>
</kw>
<msg timestamp="20181102 14:55:37.485" level="INFO">${return} = Success</msg>
<status status="PASS" starttime="20181102 14:53:36.874" endtime="20181102 14:55:37.485"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>断言执行结果为success</arg>
</arguments>
<msg timestamp="20181102 14:55:37.486" level="INFO">断言执行结果为success</msg>
<status status="PASS" starttime="20181102 14:55:37.486" endtime="20181102 14:55:37.487"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Be Equal As Strings</arg>
<arg>'${return}'</arg>
<arg>'Success'</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>'${return}'</arg>
<arg>'Success'</arg>
</arguments>
<status status="PASS" starttime="20181102 14:55:37.488" endtime="20181102 14:55:37.489"></status>
</kw>
<status status="PASS" starttime="20181102 14:55:37.487" endtime="20181102 14:55:37.489"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>删除流水线组</arg>
</arguments>
<msg timestamp="20181102 14:55:37.492" level="INFO">删除流水线组</msg>
<status status="PASS" starttime="20181102 14:55:37.490" endtime="20181102 14:55:37.492"></status>
</kw>
<kw name="devops_删除workspace" library="devopsAPI业务关键词">
<arguments>
<arg>gitlab</arg>
<arg>${workspaceName_gitlab}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=Basic YWRtaW46UHdkMTIzNDU2</arg>
<arg>X-Tenant=${namespace}</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20181102 14:55:37.495" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'Basic YWRtaW46UHdkMTIzNDU2', 'X-Tenant': 'godevops'}</msg>
<status status="PASS" starttime="20181102 14:55:37.493" endtime="20181102 14:55:37.496"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>compass</arg>
<arg>http://${compass_ip}:${api_port}/apis/admin.devops.caicloud.io</arg>
<arg>${header}</arg>
</arguments>
<msg timestamp="20181102 14:55:37.497" level="INFO">Creating Session using : alias=compass, url=http://192.168.129.30:6002/apis/admin.devops.caicloud.io, headers={'Content-Type': 'application/json', 'Authorization': 'Basic YWRtaW46UHdkMTIzNDU2', 'X-Tenant': 'godevops'},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20181102 14:55:37.496" endtime="20181102 14:55:37.497"></status>
</kw>
<kw name="Delete Request" library="RequestsLibrary">
<doc>Send a DELETE request on the session object found using the</doc>
<arguments>
<arg>compass</arg>
<arg>/v1/workspaces/${workspace}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20181102 14:55:37.912" level="INFO">Delete Request using : alias=compass, uri=/v1/workspaces/abcgitlab, data=[],                     headers={'Content-Type': 'application/json', 'Authorization': 'Basic YWRtaW46UHdkMTIzNDU2', 'X-Tenant': 'godevops'}, allow_redirects=True </msg>
<msg timestamp="20181102 14:55:37.913" level="INFO">${resp} = &lt;Response [204]&gt;</msg>
<status status="PASS" starttime="20181102 14:55:37.498" endtime="20181102 14:55:37.914"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>204</arg>
</arguments>
<msg timestamp="20181102 14:55:37.916" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20181102 14:55:37.915" endtime="20181102 14:55:37.917"></status>
</kw>
<status status="PASS" starttime="20181102 14:55:37.493" endtime="20181102 14:55:37.918"></status>
</kw>
<status status="PASS" starttime="20181102 14:53:34.135" endtime="20181102 14:55:37.919" critical="yes"></status>
</test>
<status status="PASS" starttime="20181102 14:53:33.842" endtime="20181102 14:55:37.920"></status>
</suite>
<status status="PASS" starttime="20181102 14:53:33.840" endtime="20181102 14:55:37.927"></status>
</suite>
<status status="PASS" starttime="20181102 14:53:33.837" endtime="20181102 14:55:37.930"></status>
</suite>
<status status="PASS" starttime="20181102 14:53:33.808" endtime="20181102 14:55:37.932"></status>
</suite>
<statistics>
<total>
<stat pass="1" fail="0">Critical Tests</stat>
<stat pass="1" fail="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="1" fail="0" id="s1" name="Devops">Devops</stat>
<stat pass="1" fail="0" id="s1-s1" name="测试用例">Devops.测试用例</stat>
<stat pass="1" fail="0" id="s1-s1-s1" name="API">Devops.测试用例.API</stat>
<stat pass="1" fail="0" id="s1-s1-s1-s1" name="API">Devops.测试用例.API.API</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
